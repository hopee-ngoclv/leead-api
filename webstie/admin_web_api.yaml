openapi: 3.0.0
info:
  description: >-
    管理ウェブ向けのAPI
  version: 1.0.0
  title: 管理ウェブ向けのAPI
tags:
  - name: 認証
    description: 認証管理
  - name: 施設・店舗
    description: 施設および店舗の管理
  - name: 会員情報
    description: 会員の管理
  - name: ポイント
    description: ポイントの管理
  - name: クーポン
    description: クーポンの管理
  - name: ランク
    description: ランクの管理
  - name: キャンペーン
    description: キャンペーンの管理
  - name: 管理ユーザー
    description: 管理ユーザー管理
  - name: その他
    description: その他情報管理
paths:
  /admin/api/v1/auth/sign_in:
    post:
      summary: ログイン
      description: 企業コード、ユーザーID、パスワードを受け付け、ログイン処理を行う
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - tenant_code
                - user_id
                - password
              properties:
                user_id:
                  type: string
                  description: 会員ID(uid)
                  example: 1
                password:
                  type: string
                  minimum: 1
                  description: パスワード
                  example: p@assword
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - admin_user
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      admin_user:
                        $ref: '#/components/schemas/AdminUser'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/auth/token_refresh:
    post:
      summary: "トークンリフレッシュ"
      description: "リフレッシュトークンを受け付け、JWTトークンのリフレッシュ処理を行う"
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  $ref: "#/components/schemas/RefreshToken"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - admin_user
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      admin_user:
                        $ref: '#/components/schemas/AdminUser'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users:
    get:
      summary: "会員詳細一覧取得"
      description: |
        検索項目に従い（前方一致検索）、該当する会員情報の詳細情報を一覧で返却する<br>
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: membership_number
          schema:
            type: string
            example: 255
          required: false
          description: 会員番号
        - in: query
          name: username_kana
          schema:
            type: integer
            example: 1
          required: false
          description: 会員名（カナ）
        - in: query
          name: email
          description: メールアドレス
          example: user@example.com
          schema:
            type: string
            maxLength: 255
          required: false
        - in: query
          name: postal_code
          schema:
            type: integer
            pattern: '^\d{7}$'
            example: "5430001"
          required: false
          description: |
            (国内)郵便番号<br>
            -(ハイフン)なし
        - in: query
          name: phone_number
          description: 電話番号<br>先頭1桁に+を許容
          example: 012000000001
          schema:
            type: string
            maxLength: 255
          required: false
        - in: query
          name: system_type
          schema:
            type: integer
            enum:
              - 1
              - 2
            example: 1
          required: true
          description: |
            会員名新旧区分<br>
            新システム=1, 旧システム=2
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: |
                      usersは会員番号の昇順にてソート済み
                    required:
                      - users
                      - pagination
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: 会員登録
      description: |
        登録項目に従い、会員の新規登録処理を行う<br>
        パスワードは電話番号の下6桁が自動セットされる<br>
        ※過去に会員情報が入力されたことがある会員番号は設定不可
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - membership_number
                - rank_id
                - last_name
                - first_name
                - last_name_kana
                - first_name_kana
                - email
                - phone_number
                - birthday
                - gender
                - entered_at
                - is_foreign_country
                - country_name
                - mail_delivery_flag
                - rank_rewash_flag
                - valid_user_flag
              properties:
                membership_number:
                  type: integer
                  description: 新会員番号
                  example: 0010123456789012
                rank_id:
                  type: integer
                  description: ランクID
                  example: 1
                last_name:
                  type: string
                  maxLength: 255
                  description: 姓
                  example: 佐藤
                first_name:
                  type: string
                  maxLength: 255
                  description: 名
                  example: 一郎
                last_name_kana:
                  type: string
                  maxLength: 255
                  description: 姓（カナ）
                  example: サトウ
                first_name_kana:
                  type: string
                  maxLength: 255
                  description: 名（カナ）
                  example: イチロウ
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: user@example.com
                phone_number:
                  type: string
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                birthday:
                  type: string
                  pattern: '^\d{8}$'
                  description: |
                    誕生日<br>
                    YYYYMMDD形式
                  example: 19800401
                gender:
                  $ref: '#/components/schemas/UserGender'
                entered_at:
                  type: string
                  pattern: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    入会日<br>
                    会員の入会日が登録される
                    （新プラスチックカード会員の場合、登録日時≠入会日の想定）
                  example: 2021/10/01
                is_foreign_country:
                  type: string
                  maxLength: 1
                  description: |
                    外国住所フラグ<br>
                    デフォルト：0（国内）、1（海外）
                  example: false
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    (国内)郵便番号<br>
                    -(ハイフン)なし<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: |
                    (国内)都道府県番号<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example:
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)市区町村<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: 天王寺区
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: (国内)番地・建物名
                  example: "上本町６丁目１−５５"
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: (国内)その他
                  example: ""
                country_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 国
                  example: ""
                foreign_address:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    海外の住所<br>
                    外国居住者の場合のみ記載
                  example: ""
                mail_delivery_flag:
                  type: boolean
                  description: |
                    メール発信区分<br>
                    デフォルト：false（不要）、true（要）
                  example: true
                reissue_flag:
                  type: boolean
                  description: |
                    再発行フラグ<br>
                    デフォルト：false<br>
                    ※再発行の場合は、初回入会ポイントがつかない等の判断で利用
                  example: false
                rank_rewash_flag:
                  type: boolean
                  description: |
                    ランク洗替対象外フラグ<br>
                    ※洗替対象外の場合はランクの更新が行われない
                  example: false
                notes:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    備考欄<br>
                    フリーフォーマットでのメモが残せる。運用向けなので、エンドユーザーには見せない項目。
                  example:
                valid_user_flag:
                  type: boolean
                  nullable: true
                  description: |
                    有効ユーザーフラグ<br>
                    true: 有効, false: 退会
                  example: true
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/:
    get:
      summary: "会員詳細取得"
      description: |
        検索項目に従い、該当する会員情報の詳細情報を一覧で返却する
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: 会員の詳細情報
                    required:
                      - user
                      - current_rank
                      - user_points
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    put:
      summary: "会員更新"
      description: |
        登録項目に従い更新項目に従い、会員の更新処理を行う<br>
        ※会員情報未登録の場合は利用不可（会員登録API等を用いた事前登録が必要）
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - rank_id
                - last_name
                - first_name
                - last_name_kana
                - first_name_kana
                - email
                - phone_number
                - birthday
                - gender
                - entered_at
                - is_foreign_country
                - country_name
                - mail_delivery_flag
                - rank_rewash_flag
                - valid_user_flag
                - suspension_flag
              properties:
                rank_id:
                  type: integer
                  description: ランクID
                  example: 1
                last_name:
                  type: string
                  maxLength: 255
                  description: |
                    姓<br>
                    ・未受け渡し新プラスチックカード対応のため、NULLを許可（以下、改修箇所でTRUEのものは同様）<br>
                    ・登録時や更新時の必須エラーはアプリケーションで制御を想定（以下、改修箇所でTRUEのものは同様）。
                  example: "佐藤"
                first_name:
                  type: string
                  maxLength: 255
                  description: 名
                  example: "一郎"
                last_name_kana:
                  type: string
                  maxLength: 255
                  description: 姓（カナ）
                  example: "サトウ"
                first_name_kana:
                  type: string
                  maxLength: 255
                  description: 名（カナ）
                  example: "イチロウ"
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: "user@example.com"
                phone_number:
                  type: string
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                birthday:
                  type: string
                  pattern: '^\d{8}$'
                  description: |
                    誕生日<br>
                    YYYYMMDD形式
                  example: "19800401"
                gender:
                  $ref: '#/components/schemas/UserGender'
                entered_at:
                  type: string
                  pattern: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    入会日<br>
                    会員の入会日が登録される
                    （新プラスチックカード会員の場合、登録日時≠入会日の想定）
                  example: 2021/10/01
                is_foreign_country:
                  type: string
                  maxLength: 1
                  description: |
                    外国住所フラグ<br>
                    デフォルト：0（国内）、1（海外）
                  example: false
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    (国内)郵便番号<br>
                    -(ハイフン)なし<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: |
                    (国内)都道府県番号<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: 1
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)市区町村<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "天王寺区"
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: (国内)番地・建物名
                  example: "上本町６丁目１−５５"
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: (国内)その他
                  example: ""
                country_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 国
                  example:
                foreign_address:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    海外の住所<br>
                    外国居住者の場合のみ記載
                  example:
                mail_delivery_flag:
                  type: boolean
                  description: |
                    メール発信区分<br>
                    デフォルト：false（不要）、true（要）
                  example: true
                reissue_flag:
                  type: boolean
                  description: |
                    再発行フラグ<br>
                    デフォルト：false<br>
                    ※再発行の場合は、初回入会ポイントがつかない等の判断で利用
                  example: false
                rank_rewash_flag:
                  type: boolean
                  description: |
                    ランク洗替対象外フラグ<br>
                    デフォルト：false<br>
                    （true:（洗替対象）、false（洗替対象外））<br>
                    ※洗替対象外の場合はランクの更新が行われない
                  example: false
                notes:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    備考欄<br>
                    フリーフォーマットでのメモが残せる。運用向けなので、エンドユーザーには見せない項目。
                  example:
                valid_user_flag:
                  type: boolean
                  nullable: true
                  description: |
                    有効ユーザーフラグ<br>
                    true: 有効, false: 退会
                  example: true
                suspension_flag:
                  type: boolean
                  description: |
                    停止フラグ<br>
                    デフォルト：true<br>
                    true（停止）、false（アクティブ）<br>
                    ※停止の場合は、ポイント利用・付与ができない状態
                  example: false
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/password_reset:
    post:
      summary: パスワード初期化
      description: |
        登録項目に従い、会員の新規登録処理を行う<br>
        パスワードは電話番号の下6桁がセットされる
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/check_duplicate:
    get:
      summary: 会員重複確認
      description: |
        会員重複パターンの存在有無と該当する会員情報を取得<br>
        pathで指定した会員は重複チェックの対象外となる<br><br>
        有効な会員状態かつ下記のいずれかに該当する会員は重複有り判定となる<br>
        ・同一メールアドレスが登録済み<br>
        ・同一電話番号が登録済み<br>
        ・同一氏名＋生年月日が登録済み<br>
      tags:
        - 会員情報
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: exclude_user_id
          description: 重複チェック対象外会員ID
          example: 1
          required: false
          schema:
            type: integer
            minimum: 1
        - in: query
          name: email
          description: メールアドレス
          example: user@example.com
          schema:
            type: string
            maxLength: 255
          required: true
        - in: query
          name: phone_number
          description: 電話番号<br>先頭1桁に+を許容
          example: 012000000001
          schema:
            type: string
            maxLength: 255
          required: true
        - in: query
          name: last_name
          description: 会員名（姓）
          example: 山田
          schema:
            type: string
            maxLength: 255
          required: true
        - in: query
          name: first_name
          description: 会員名（名）
          example: 太郎
          schema:
            type: string
            maxLength: 255
          required: true
        - in: query
          name: birthday
          description: |
            誕生日<br>
            YYYYMMDD形式
          example: 19800401
          schema:
            type: string
            maxLength: 255
          required: true
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: |
                      重複会員の一覧<br>会員番号の昇順にてソート）<br>重複会員が存在しない場合は0件となる<br>
                    required:
                      - users
                      - pagination
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/points/:
    post:
      summary: ポイント取引追加
      description: |
        会員番号を受け付け、新規でポイント取引の追加処理を行う
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - amount
                - is_reduced_tax
                - notes
                - facility_id
                - apply_date
              properties:
                dry-run:
                  type: boolean
                  description: |
                    ポイント付与のdry-run<br>
                    trueの場合は実際のポイント付与を行わずに、確定後の情報が返却される。
                amount:
                  type: integer
                  minimum: 1
                  description: 売上金額（税込）
                  example: 1
                is_reduced_tax:
                  type: boolean
                  description: |
                    軽減税率対象<br>
                    amountに含まれる消費税額が軽減税率対象であるか
                nights_stayed:
                  type: integer
                  nullable: true
                  minimum: 0
                  description: 宿泊日数入力（フロントのみ）
                  example: 1
                notes:
                  type: string
                  minLength: 0
                  maxLength: 100
                  description: |
                    特記事項<br>
                    特別な対応等をした場合に特記事項が入力される
                facility_id:
                  type: integer
                  minimum: 1
                  description: 施設・店舗ID
                  example: 1
                apply_date:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: ポイント取引の追加対象となる日付
                  example: 2021/10/01
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: |
                      キャンペーンが適用される場合、通常ポイント付与分とキャンペーンによるポイント付与分は分離した形でレスポンスされる。<br>
                      ※通常付与率1% / キャンペーン付与率5%の場合は、付与されるポイント総数は5%分（1%+5%で6%ではない）となり、
                       1%分は通常付与扱い、4%分にキャンペーン付与扱いとなる。<br><br>
                       ただし、キャンペーンポイントが固定値で登録されている場合のポイント総数は、通常ポイント付与率により算出したものと、とキャンペーンポイントの合算値となる
                    required:
                      - is_dry-run
                      - user_points
                      - added_points
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      added_points:
                        type: object
                        required:
                          - amount
                          - point_grant_rate
                          - added_points
                          - is_reduced_tax
                          - notes
                          - includes_campaign_points
                        properties:
                          amount:
                            type: integer
                            minimum: 1
                            description: 売上金額（税込）
                            example: 1000
                          point_grant_rate:
                            type: number
                            description: 現在のランクによる通常ポイント付与率
                            example: 1.5
                          added_points:
                            type: integer
                            minimum: 1
                            description: |
                              付与ポイント数<br>
                              ※キャンペーン適用時は通常ポイント付与率適用分のみとなる
                            example: 300
                          is_reduced_tax:
                            type: boolean
                            description: 軽減税率対象
                          nights_stayed:
                            type: integer
                            nullable: true
                            minimum: 0
                            description: （フロントのみ）
                            example: 5
                          notes:
                            type: string
                            minLength: 0
                            maxLength: 100
                            description: 特記事項
                          includes_campaign_points:
                            type: object
                            description: 適用されたキャンペーン情報
                            required:
                              - campaign
                            properties:
                              campaign:
                                type: object
                                nullable: true
                                required:
                                  - id
                                  - name
                                  - point_grant_rate
                                  - expired_at
                                  - period
                                  - added_points
                                properties:
                                  id:
                                    type: integer
                                    minimum: 1
                                    example: 1
                                    description: キャンペーンID
                                  name:
                                    type: string
                                    minLength: 1
                                    maxLength: 255
                                    example: ポイント2倍キャンペーン
                                    description: キャンペーン名
                                  point_grant_rate:
                                    type: number
                                    description: |
                                      キャンペーンのポイント付与率<br>
                                      キャンペーン適用時はこちらの付与率のみが適用される。
                                    example: 3.5
                                  expired_at:
                                    type: string
                                    format: date-time
                                    description: |
                                      ポイント有効期限<br>
                                      キャンペーンのポイント付与率から通常のポイント付与率分を差し引いたポイントにのみ適用される。
                                    example: 2021/10/01 10:00:00
                                  period:
                                    type: object
                                    description: キャンペーン開催期間
                                    required:
                                      - start_at
                                      - end_at
                                    properties:
                                      start_at:
                                        type: string
                                        format: date-time
                                        description: 開始日
                                        example: 2021/10/01 10:00:00
                                      end_at:
                                        type: string
                                        format: date-time
                                        description: 終了日
                                        example: 2021/10/01 10:00:00
                                  added_points:
                                    type: integer
                                    minimum: 1
                                    description: |
                                      キャンペーンによる付与ポイント数<br>
                                      ※通常ポイント付与率による適用分は含まない
                                    example: 300

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    put:
      summary: ポイント修正（マニュアル）
      description: |
        修正後のポイント数、修正理由、有効期限を受け付け、ポイント修正処理を行う
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - expired_at
                - after_current_points
                - reason
              properties:
                dry-run:
                  type: boolean
                  description: |
                    dry-run<br>
                    trueの場合は実際のポイント数を更新せずに、修正後の情報が返却される。
                expired_at:
                  type: string
                  nullable: true
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    ポイント有効期限<br>
                    有効期限無しの場合はnull
                  example: 2021/10/01
                after_current_points:
                  type: integer
                  description: 変更後のポイント総数
                  example: 100
                reason:
                  type: string
                  minLength: 0
                  maxLength: 255
                  description: ポイント増減の理由
                  example: 売上ポイント
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - expired_at
                      - before_current_points
                      - after_current_points
                      - reason
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      expired_at:
                        type: string
                        nullable: true
                        format: '^\d{4}\/\d{2}\/\d{2}$'
                        description: |
                          ポイント有効期限<br>
                          有効期限無しの場合はnull
                        example: 2021/10/01
                      before_current_points:
                        type: integer
                        description: 指定した有効期限が適用されている変更前のポイント総数
                        example: 100
                      after_current_points:
                        type: integer
                        description: 指定した有効期限が適用されている変更後のポイント総数
                        example: 100
                      reason:
                        type: string
                        minLength: 0
                        maxLength: 255
                        description: ポイント増減の理由
                        example: 売上ポイント
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/points/use:
    post:
      summary: ポイント利用
      description: |
        会員番号を受け付け、ポイント利用（減算）処理を行う。<br>
        ポイント利用時は有効期限が近い保有ポイントから減算をする
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - points
              properties:
                dry-run:
                  type: boolean
                  description: |
                    ポイント付与のdry-run<br>
                    trueの場合は実際のポイント付与を行わずに、確定後の情報が返却される。
                points:
                  type: integer
                  minimum: 1
                  description: 利用ポイント数
                  example: 100
                notes:
                  type: string
                  minLength: 0
                  maxLength: 100
                  description: |
                    特記事項<br>
                    特別な対応等をした場合に特記事項が入力される
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - user_points
                      - used_points
                      - notes
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      used_points:
                        type: integer
                        description: 利用ポイント数
                        example: 100
                      notes:
                        type: string
                        minLength: 0
                        maxLength: 100
                        description: 特記事項

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/points/histories:
    get:
      summary: ポイント履歴一覧取得
      description: 参照対象年度（4月～3月）を受け付け、ポイント履歴一覧情報を返却する
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
        - in: query
          name: year
          schema:
            type: integer
            example: 2020
          required: true
          description: 指定年度
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - year
                      - histories
                      - pagination
                    properties:
                      year:
                        type: integer
                        description: 指定年度
                        example: 2020
                      histories:
                        type: array
                        items:
                          $ref: '#/components/schemas/PointHistory'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/users/{user_id}/points/histories/{history_id}:
    put:
      summary: ポイント取引履歴修正
      description: |
        ポイント付与の修正の場合：<br>
        ・ポイント履歴ID、修正後の売上金額、宿泊数を受け付け、取引単位でのポイント修正処理を行う<br><br>

        ポイント利用の修正の場合：<br>
        ・ポイント履歴ID、利用ポイントを受け付け、取引単位でのポイント修正処理を行う<br>
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
        - in: path
          name: history_id
          schema:
            type: integer
            example: 1
          required: true
          example: 1
          description: ポイント取引履歴ID
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/UpdateAddPointHistory'
                - $ref: '#/components/schemas/UpdateUsePointHistory'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - before_user_points
                      - after_user_points
                      - before_point_history
                      - after_point_history
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      before_user_points:
                        $ref: '#/components/schemas/UserPoints'
                      after_user_points:
                        $ref: '#/components/schemas/UserPoints'
                      before_point_history:
                        $ref: '#/components/schemas/PointHistory'
                      after_point_history:
                        $ref: '#/components/schemas/PointHistory'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: ポイント取引履歴削除
      description: ポイント履歴IDを受け付け、ポイント取引履歴の削除処理を行う
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/userId'
        - in: path
          name: history_id
          schema:
            type: integer
            example: 1
          required: true
          example: 1
        - in: query
          name: dry-run
          required: false
          schema:
            type: boolean
          description: |
            dry-run<br>
            trueの場合は削除を実行せずに、削除後の情報が返却される。
          example: false

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - reason
                      - before_user_points
                      - after_user_points
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      reason:
                        type: string
                        minLength: 0
                        maxLength: 255
                        description: 修正理由
                        example: xxxのため
                      before_user_points:
                        $ref: '#/components/schemas/UserPoints'
                      after_user_points:
                        $ref: '#/components/schemas/UserPoints'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/facilities:
    get:
      summary: 施設・店舗一覧取得
      description: 施設および店舗の一覧を返却する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: parent_facility_code
          schema:
            type: string
            nullable: true
          required: true
          example: front
          description: |
            親施設コード<br>
            ※null指定の場合は親施設を持たない店舗の一覧を取得
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
        - in: query
          name: find_all
          schema:
            type: boolean
          required: false
          example: false
          description: |
            施設・店舗を全件取得するオプション<br>
            ページネーション向けのパラメータと併用された場合はfind_allパラメータを優先とする。

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - parent_facility
                      - facilities
                      - pagination
                    properties:
                      parent_facility:
                        $ref: '#/components/schemas/Facility'
                      facilities:
                        type: array
                        items:
                          $ref: '#/components/schemas/Facility'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: 施設・店舗登録
      description: 登録項目に従い、施設・店舗の新規登録処理を行う
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent_facility_id
                - facility_name
                - facility_code
              properties:
                parent_facility_id:
                  type: integer
                  nullable: true
                  description: |
                    親施設ID<br>
                    nullの場合は親施設として作成を行う
                  example: 1
                facility_name:
                  type: string
                  maxLength: 30
                  description: 施設・店舗名
                facility_code:
                  $ref: "#/components/schemas/FacilityCode"
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    郵便番号<br>
                    -(ハイフン)なし
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: 都道府県番号
                  example: 1
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 市区町村
                  example: 天王寺区
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 番地・建物名
                  example: 上本町６丁目１−５５
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: その他
                  example:
                phone_number:
                  type: string
                  nullable: true
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                fax_number:
                  type: string
                  nullable: true
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  nullable: true
                  description: メールアドレス
                  example: user@example.com
                staff_name:
                  type: string
                  nullable: true
                  description: 担当者名
                  example: 佐藤太郎
                kind:
                  $ref: "#/components/schemas/FacilityKind"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - facility
                    properties:
                      facility:
                        $ref: '#/components/schemas/FacilityIncludeParent'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/facilities/{facility_id}:
    put:
      summary: 施設・店舗更新
      description: 更新項目に従い、施設・店舗の更新処理を行う
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - facility_name
                - facility_code
              properties:
                facility_name:
                  type: string
                  maxLength: 30
                  description: 施設・店舗名
                facility_code:
                  type: string
                  maxLength: 30 # todo: format確認
                  description: 施設・店舗コード
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    郵便番号<br>
                    -(ハイフン)なし
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: 都道府県番号
                  example: 1
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 市区町村
                  example: 天王寺区
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 番地・建物名
                  example: 上本町６丁目１−５５
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: その他
                  example:
                phone_number:
                  type: string
                  nullable: true
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                fax_number:
                  type: string
                  nullable: true
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  nullable: true
                  description: メールアドレス
                  example: user@example.com
                staff_name:
                  type: string
                  nullable: true
                  description: 担当者名
                  example: 佐藤太郎
                kind:
                  $ref: "#/components/schemas/FacilityKind"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - facility
                    properties:
                      facility:
                        $ref: '#/components/schemas/FacilityIncludeParent'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: 施設・店舗削除
      description: 施設・店舗IDを受け付け、施設・店舗の削除処理を行う
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗ID
      responses:
        '204':
          description: "Success"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/facilities/{facility_id}/staffs:
    get:
      summary: 店舗スタッフ一覧取得
      description: 店舗IDを受け付け、店舗に紐づくスタッフの一覧を返却する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗ID
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - facility
                      - staffs
                      - pagination
                    properties:
                      facility:
                        $ref: "#/components/schemas/FacilityIncludeParent"
                      staffs:
                        type: array
                        items:
                          $ref: "#/components/schemas/Staff"
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: 店舗スタッフ追加
      description: 店舗IDを受け付け、店舗に紐づくスタッフを新規追加する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - staff_name
              properties:
                staff_name:
                  $ref: "#/components/schemas/StaffName"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - facility
                      - staff
                    properties:
                      facility:
                        $ref: '#/components/schemas/FacilityIncludeParent'
                      staff:
                        $ref: "#/components/schemas/Staff"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/facilities/{facility_id}/staffs/{staff_id}:
    delete:
      summary: 店舗スタッフ削除
      description: スタッフIDを受け付け、スタッフを削除する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗ID
        - in: path
          name: staff_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設・店舗スタッフID
      responses:
        '204':
          description: "Success"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/coupons:
    get:
      summary: クーポン一覧取得
      description: クーポンの一覧を返却する
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - coupons
                    properties:
                      coupons:
                        type: array
                        items:
                          $ref: '#/components/schemas/Coupon'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: クーポン登録
      description: 登録項目に従い、クーポンの新規登録処理を行う
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent_facility_ids
                - name
                - start_at
                - end_at
                - kind
                - point_grant_value
                - burden_rate_hotel
                - burden_rate_head_office
                - description
                - target_user_rank_ids
                - target_user_prefecture_ids
                - target_foreign_country
              properties:
                parent_facility_ids:
                  type: array
                  description: 施設ID一覧
                  items:
                    type: object
                    required:
                      - id
                      - facility_ids
                    properties:
                      id:
                        type: integer
                        description: 施設ID一覧
                        example: 1
                      facility_ids:
                        type: array
                        items:
                          type: integer
                          description: 店舗ID一覧
                          example: 1
                name:
                  type: string
                  maxLength: 255
                  description: クーポン名
                  example: "入会クーポン"
                start_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    クーポン開始日<br>
                    現在の日付以降が選択可能
                  example: "2021/10/01"
                end_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    クーポン終了日<br>
                    現在の日付以降が選択可能
                  example: "2021/10/01"
                kind:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: |
                    利用種別<br>
                    1: 一回のみ利用可能<br>
                    2: 期間内何度でも利用可能
                  example: 1
                point_grant_value:
                  type: integer
                  minimum: 0
                  description: |
                    付与ポイント数
                  example: 100
                burden_rate_hotel:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    ホテルの負担率(%)<br>
                    <font color="red">※条件付き必須</font> 付与ポイントが0の場合は空許容<br>
                    本部の負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                burden_rate_head_office:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    本部の負担率(%)<br>
                    <font color="red">※条件付き必須</font> 付与ポイントが0の場合は空許容<br>
                    ホテルの負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                description:
                  type: string
                  maxLength: 300
                  description: クーポン内容
                  example: "新規登録特典"
                target_user_rank_ids:
                  type: array
                  items:
                    type: integer
                    description: クーポン提供を行う対象会員ランクID
                    example: 1
                target_user_prefecture_ids:
                  type: array
                  items:
                    type: integer
                    description: クーポン提供を行う対象の会員都道府県ID
                    example: 1
                target_foreign_country:
                  type: boolean
                  description: 外国住所を対象とするか
                  example: true
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - coupon
                    properties:
                      coupon:
                        $ref: '#/components/schemas/Coupon'

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/coupons/{coupon_id}:
    put:
      summary: クーポン更新
      description: 更新項目に従い、クーポンの更新処理を行う
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: coupon_id
          schema:
            type: integer
            example: 1
          required: true
          description: クーポンID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent_facility_ids
                - name
                - start_at
                - end_at
                - kind
                - point_grant_value
                - burden_rate_hotel
                - burden_rate_head_office
                - description
                - target_user_rank_ids
                - target_user_prefecture_ids
                - target_foreign_country
              properties:
                parent_facility_ids:
                  type: array
                  description: 施設ID一覧
                  items:
                    type: object
                    required:
                      - id
                      - facility_ids
                    properties:
                      id:
                        type: integer
                        description: 施設ID一覧
                        example: 1
                      facility_ids:
                        type: array
                        items:
                          type: integer
                          description: 店舗ID一覧
                          example: 1
                name:
                  type: string
                  maxLength: 255
                  description: クーポン名
                  example: "入会クーポン"
                start_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    クーポン開始日<br>
                    現在の日付以降が選択可能
                  example: "2021/10/01"
                end_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: |
                    クーポン終了日<br>
                    現在の日付以降が選択可能
                  example: "2021/10/01"
                kind:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: |
                    利用種別<br>
                    1: 一回のみ利用可能<br>
                    2: 期間内何度でも利用可能
                  example: 1
                point_grant_value:
                  type: integer
                  minimum: 0
                  description: |
                    付与ポイント数
                  example: 100
                burden_rate_hotel:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    ホテルの負担率(%)<br>
                    <font color="red">※条件付き必須</font> 付与ポイントが0の場合は空許容<br>
                    本部の負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                burden_rate_head_office:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    本部の負担率(%)<br>
                    <font color="red">※条件付き必須</font> 付与ポイントが0の場合は空許容<br>
                    ホテルの負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                description:
                  type: string
                  maxLength: 300
                  description: クーポン内容
                  example: "新規登録特典"
                target_user_rank_ids:
                  type: array
                  items:
                    type: integer
                    description: クーポン提供を行う対象会員ランクID
                    example: 1
                target_user_prefecture_ids:
                  type: array
                  items:
                    type: integer
                    description: クーポン提供を行う対象の会員都道府県ID
                    example: 1
                target_foreign_country:
                  type: boolean
                  description: 外国住所を対象とするか
                  example: true
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - coupon
                    properties:
                      coupon:
                        $ref: '#/components/schemas/Coupon'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: クーポン削除
      description: クーポンIDを受け付け、クーポンの削除処理を行う
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: coupon_id
          schema:
            type: integer
            example: 1
          required: true
          description: クーポンID
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/coupons/facilities/registrable:
    get:
      summary: クーポン登録用の施設・店舗一覧を取得
      description: |
        クーポン登録が可能な施設一覧および店舗一覧を取得<br><br>
        ※管理ユーザーの権限を考慮
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - parent_facilities
                    properties:
                      parent_facilities:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - code
                            - facilities
                          properties:
                            id:
                              $ref: '#/components/schemas/FacilityId'
                            name:
                              $ref: '#/components/schemas/FacilityName'
                            code:
                              $ref: '#/components/schemas/FacilityCode'
                            facilities:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - name
                                  - code
                                properties:
                                  id:
                                    $ref: '#/components/schemas/FacilityId'
                                  name:
                                    $ref: '#/components/schemas/FacilityName'
                                  code:
                                    $ref: '#/components/schemas/FacilityCode'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/ranks:
    get:
      summary: ランクマスタ一覧取得
      description: ランクマスタの一覧を返却する
      tags:
        - ランク
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - ranks
                    properties:
                      ranks:
                        type: array
                        items:
                          $ref: '#/components/schemas/Rank'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: ランク登録
      description: 登録項目に従い、ランクの新規登録処理を行う
      tags:
        - ランク
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - minimum_nights_stayed
                - minimum_usage_amount
                - point_grant_rate
                - is_auto_rank_down
                - with_expiry
              properties:
                name:
                  type: string
                  description: ランク名
                  example: ゴールド
                minimum_nights_stayed:
                  type: integer
                  minimum: 0
                  description: 累積宿泊数の下限
                  example: 1
                minimum_usage_amount:
                  type: integer
                  minimum: 0
                  description: 累積利用額の下限
                  example: 1
                point_grant_rate:
                  type: integer
                  description: ポイント付与率
                  example: 1.5
                is_auto_rank_down:
                  type: boolean
                  description: 自動ランクダウン対象
                  example: false
                with_expiry:
                  type: boolean
                  description: 有効期限有無
                  example: true
                points_days_valid:
                  type: integer
                  nullable: true
                  description: ポイント有効日数
                  example: 730
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - rank
                    properties:
                      rank:
                        $ref: '#/components/schemas/Rank'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/ranks/{rank_id}:
    put:
      summary: ランク更新
      description: 更新項目に従い、ランクの更新処理を行う
      tags:
        - ランク
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: rank_id
          schema:
            type: integer
            example: 1
          required: true
          description: ランクID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - minimum_nights_stayed
                - minimum_usage_amount
                - point_grant_rate
                - is_auto_rank_down
                - with_expiry
              properties:
                name:
                  type: string
                  description: ランク名
                  example: ゴールド
                minimum_nights_stayed:
                  type: integer
                  minimum: 0
                  description: 累積宿泊数の下限
                  example: 1
                minimum_usage_amount:
                  type: integer
                  minimum: 0
                  description: 累積利用額の下限
                  example: 1
                point_grant_rate:
                  type: integer
                  description: ポイント付与率
                  example: 1.5
                is_auto_rank_down:
                  type: boolean
                  description: 自動ランクダウン対象
                  example: false
                with_expiry:
                  type: boolean
                  description: 有効期限有無
                  example: true
                points_days_valid:
                  type: integer
                  nullable: true
                  description: ポイント有効日数
                  example: 730
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - rank
                    properties:
                      rank:
                        $ref: '#/components/schemas/Rank'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/campaign:
    post:
      summary: キャンペーン登録
      description: 登録項目に従い、キャンペーンの新規登録処理を行う
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parent_facility_id
                - facility_ids
                - name
                - start_at
                - end_at
                - kind
                - burden_rate_hotel
                - burden_rate_head_office
                - expired_at
              properties:
                parent_facility_id:
                  type: integer
                  description: 施設ID
                  example: 1
                facility_ids:
                  type: array
                  nullable: true
                  description: |
                    店舗ID<br>
                    nullの場合は店舗を指定せず全店舗を対象とする
                  items:
                    type: integer
                    example: 1
                name:
                  type: string
                  maxLength: 255
                  description: キャンペーン名
                  example: 新規登録キャンペーン
                start_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: 開始日
                  example: 2021/10/01
                end_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: 終了日
                  example: 2021/10/01
                kind:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                  description: |
                    キャンペーン種別<br>
                    1: 付与倍率<br>
                    2: 固定付与（1回）<br>
                    3: 固定付与（毎回）
                  example: 1
                point_grant_rate:
                  type: number
                  minimum: 0.1
                  description: |
                    ポイント付与率<br>
                    kindが1の場合は必須
                  example: 3.5
                point_grant_value:
                  type: integer
                  minimum: 1
                  description: |
                    付与数<br>
                    kindが2または3の場合は必須
                  example: 100
                burden_rate_hotel:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    ホテルの負担率(%)<br>
                    本部の負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                burden_rate_head_office:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    本部の負担率(%)<br>
                    ホテルの負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                expired_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: ポイント有効期限
                  example: 2021/10/01
                description:
                  type: string
                  maxLength: 100
                  description: キャンペーン詳細
                  example: 新規登録に適用されるキャンペーン
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - campaign
                    properties:
                      campaign:
                        $ref: '#/components/schemas/Campaign'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/campaign/{campaign_id}:
    put:
      summary: キャンペーン更新
      description: 更新項目に従い、キャンペーンの更新処理を行う
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: campaign_id
          schema:
            type: integer
            example: 1
          required: true
          description: キャンペーンID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - start_at
                - end_at
                - kind
                - burden_rate_hotel
                - burden_rate_head_office
                - expired_at
              properties:
                name:
                  type: string
                  maxLength: 255
                  description: キャンペーン名
                  example: 新規登録キャンペーン
                start_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: 開始日
                  example: 2021/10/01
                end_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: 終了日
                  example: 2021/10/01
                kind:
                  type: integer
                  enum:
                    - 1
                    - 2
                    - 3
                  description: |
                    キャンペーン種別<br>
                    1: 付与倍率<br>
                    2: 固定付与（1回）<br>
                    3: 固定付与（毎回）
                  example: 1
                point_grant_rate:
                  type: number
                  minimum: 0.1
                  description: |
                    ポイント付与率<br>
                    kindが1の場合は必須
                  example: 3.5
                point_grant_value:
                  type: integer
                  minimum: 1
                  description: |
                    付与数<br>
                    kindが2または3の場合は必須
                  example: 100
                burden_rate_hotel:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    ホテルの負担率(%)<br>
                    本部の負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                burden_rate_head_office:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: |
                    本部の負担率(%)<br>
                    ホテルの負担率との合計値が100でない場合はバリデーションエラー
                  example: 50
                expired_at:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: ポイント有効期限
                  example: 2021/10/01
                description:
                  type: string
                  maxLength: 100
                  description: キャンペーン詳細
                  example: 新規登録に適用されるキャンペーン
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - campaign
                    properties:
                      campaign:
                        $ref: '#/components/schemas/Campaign'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: キャンペーン削除
      description: キャンペーンIDを受け付け、キャンペーンの削除処理を行う
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: campaign_id
          schema:
            type: integer
            example: 1
          required: true
          description: キャンペーンID
      responses:
        '204':
          description: "Success"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/campaign/facilities/{facility_id}:
    get:
      summary: キャンペーン一覧取得
      description: キャンペーンの一覧を返却する
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: 施設ID
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - campaigns
                      - pagination
                    properties:
                      campaigns:
                        type: array
                        description: |
                          facilitiesがnullの場合は全店舗を対象としたキャンペーン
                        items:
                          $ref: '#/components/schemas/Campaign'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/campaign/facilities/registrable:
    get:
      summary: 新規キャンペーン登録用の施設・店舗一覧を取得
      description: |
        キャンペーン登録が可能な施設一覧および店舗一覧を取得<br><br>
        ※管理ユーザーの権限と有効なキャンペーン設定の有無を考慮<br>
        ※施設別キャンペーンが設定されている場合、その施設に紐づく店舗において店舗別キャンペーンは設定できない（店舗別キャンペーンが有効な期間は施設別キャンペーンは設定できない）。<br>
        また、各施設及び各店舗のキャンペーンは1件のみ設定可能（複数の期間の予約はできない）とする。
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: fetch_parents_flag
          schema:
            type: boolean
            example: true
          required: true
          description: |
            施設毎のキャンペーン情報を取得するフラグ<br>
            未指定またはfalseの場合は店舗毎のキャンペーン情報を返却する
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - facilities
                    properties:
                      facilities:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - code
                            - facilities
                          properties:
                            id:
                              $ref: '#/components/schemas/FacilityId'
                            name:
                              $ref: '#/components/schemas/FacilityName'
                            code:
                              $ref: '#/components/schemas/FacilityCode'
                            facilities:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - name
                                  - code
                                properties:
                                  id:
                                    $ref: '#/components/schemas/FacilityId'
                                  name:
                                    $ref: '#/components/schemas/FacilityName'
                                  code:
                                    $ref: '#/components/schemas/FacilityCode'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"

  /admin/api/v1/admin_users:
    get:
      summary: 管理ユーザー一覧取得
      description: 検索項目に従い、該当する管理ユーザーの一覧を返却する
      tags:
        - 管理ユーザー
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: admin_user_id
          description: 管理ユーザーID
          example: suzuki
          schema:
            type: string
            maxLength: 15
          required: false
        - in: query
          name: admin_user_name
          description: 管理ユーザー名
          example: 鈴木一郎
          schema:
            type: string
            maxLength: 15
          required: false
        - in: query
          name: authority_type
          description: 操作権限
          example: 1
          schema:
            type: array
            items:
              type: integer
              example: 1
          required: false
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: |
                      admin_usersは登録日の降順にてソート済み
                    required:
                      - admin_users
                      - pagination
                    properties:
                      admin_users:
                        type: array
                        items:
                          $ref: '#/components/schemas/AdminUser'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    post:
      summary: 管理ユーザー登録
      description: |
        登録項目に従い、管理ユーザーの新規登録処理を行う
      tags:
        - 管理ユーザー
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_user_id
                - admin_user_name
                - password
                - password_confirmation
                - authority_type
                - authority_function_types
                - authority_facilities
              properties:
                admin_user_id:
                  $ref: '#/components/schemas/AdminUserId'
                admin_user_name:
                  $ref: '#/components/schemas/AdminUserName'
                password:
                  type: string
                  maxLength: 255
                  description: パスワード
                  example: p@ssword
                password_confirmation:
                  type: string
                  maxLength: 255
                  description: パスワード（確認）
                  example: p@ssword
                authority_type:
                  $ref: '#/components/schemas/AdminAuthorityType'
                authority_function_types:
                  type: array
                  items:
                    $ref: '#/components/schemas/AdminAuthorityFunctionType'
                authority_facilities:
                  type: array
                  items:
                    $ref: '#/components/schemas/FacilityId'
                  description: 施設・店舗ID一覧

      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - admin_user
                    properties:
                      admin_user:
                        $ref: '#/components/schemas/AdminUser'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/admin_users/{admin_user_id}/:
    put:
      summary: 管理ユーザー更新
      description: 更新項目に従い、管理ユーザーの更新処理を行う
      tags:
        - 管理ユーザー
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/adminUserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - admin_user_id
                - admin_user_name
                - authority_type
                - authority_function_types
                - authority_facilities
              properties:
                admin_user_id:
                  $ref: '#/components/schemas/AdminUserId'
                admin_user_name:
                  $ref: '#/components/schemas/AdminUserName'
                authority_type:
                  $ref: '#/components/schemas/AdminAuthorityType'
                authority_function_types:
                  type: array
                  items:
                    $ref: '#/components/schemas/AdminAuthorityFunctionType'
                authority_facilities:
                  type: array
                  items:
                    $ref: '#/components/schemas/FacilityId'
                  description: 施設・店舗ID一覧
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - admin_user
                    properties:
                      admin_user:
                        $ref: '#/components/schemas/AdminUser'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: 管理ユーザー削除
      description: 管理ユーザーIDを受け付け、管理ユーザーの削除処理を行う
      tags:
        - 管理ユーザー
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/adminUserId'
      responses:
        '204':
          description: "Success"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/admin_users/{admin_user_id}/password:
    put:
      summary: 管理ユーザーパスワード更新
      description: 更新項目に従い、管理ユーザーのパスワード更新処理を行う
      tags:
        - 管理ユーザー
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/adminUserId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - password_confirmation
              properties:
                password:
                  $ref: '#/components/schemas/AdminUserPassword'
                password_confirmation:
                  $ref: '#/components/schemas/AdminUserPasswordConfirmation'
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /admin/api/v1/prefectures:
    get:
      summary: 都道府県マスタ一覧取得
      description: 都道府県の一覧取得
      tags:
        - その他
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - prefectures
                    properties:
                      prefectures:
                        type: array
                        items:
                          $ref: '#/components/schemas/Prefecture'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
components:
  schemas:
    UpdateAddPointHistory:
      type: object
      description: ポイント付与の修正の場合のパラメータ
      required:
        - dry-run
        - amount
        - is_reduced_tax
        - expired_at
      properties:
        dry-run:
          type: boolean
          description: |
            ポイント修正のdry-run<br>
            trueの場合は実際のポイント修正を行わずに、確定後の情報が返却される。
        amount:
          type: integer
          minimum: 1
          description: 売上金額（税込）
          example: 1
        is_reduced_tax:
          type: boolean
          description: 軽減税率対象
        nights_stayed:
          type: integer
          nullable: true
          minimum: 0
          description: 宿泊日数入力（フロントのみ）
          example: 1
        expired_at:
          type: string
          format: '^\d{4}\/\d{2}\/\d{2}$'
          description: ポイント有効期限
          example: 2021/10/01
        revision_note:
          type: string
          minLength: 0
          maxLength: 255
          description: 修正理由
          example: xxxのため
    UpdateUsePointHistory:
      type: object
      description: ポイント利用の修正の場合の場合のパラメータ
      required:
        - dry-run
        - points
      properties:
        dry-run:
          type: boolean
          description: |
            ポイント修正のdry-run<br>
            trueの場合は実際のポイント修正を行わずに、確定後の情報が返却される。
        points:
          type: integer
          minimum: 1
          description: ポイント増減数
          example: 100
        revision_note:
          type: string
          minLength: 0
          maxLength: 255
          description: 修正理由
          example: xxxのため
    User:
      type: object
      description: 会員情報
      required:
        - id
        - membership_number
        - last_name
        - first_name
        - last_name_kana
        - first_name_kana
        - gender
        - birthday
        - postal_code
        - old_system_address
        - email
        - is_foreign_country
        - phone_number
        - mail_delivery_flag
        - created_at
        - updated_at
        - deleted_at
        - valid_user_flag
        - suspension_flag
        - notes
        - replacement_membership_number
        - replaced_at
        - entered_at
        - data_entered_at
        - rank_rewash_flag
        - registered_staff
        - last_update_staff
        - deleted_facility
        - deleted_staff
      properties:
        id:
          $ref: '#/components/schemas/UserId'
        membership_number:
          $ref: "#/components/schemas/MembershipNumber"
        last_name:
          type: string
          maxLength: 255
          description: |
            姓<br>
            ・未受け渡し新プラスチックカード対応のため、NULLを許可（以下、改修箇所でTRUEのものは同様）<br>
            ・登録時や更新時の必須エラーはアプリケーションで制御を想定（以下、改修箇所でTRUEのものは同様）。
          example:
        first_name:
          type: string
          maxLength: 255
          description: 名
          example:
        last_name_kana:
          type: string
          maxLength: 255
          description: 姓（カナ）
          example:
        first_name_kana:
          type: string
          maxLength: 255
          description: 名（カナ）
          example:
        gender:
          $ref: '#/components/schemas/UserGender'
        birthday:
          type: string
          pattern: '^\d{8}$'
          description: |
            誕生日<br>
            YYYYMMDD形式
          example:
        email:
          type: string
          pattern: '^.+@.+\..+$'
          maxLength: 255
          description: メールアドレス
          example: user@example.com
        postal_code:
          type: string
          nullable: true
          pattern: '^\d{7}$'
          description: |
            (国内)郵便番号 -(ハイフン)なし<br>
            登録値がない場合は -(ハイフン)を表示
          example: "1010001"
        old_system_address:
          type: string
          nullable: true
          maxLength: 500
          description: |
            住所（旧システムデータ）<br>
            登録値がない場合は -(ハイフン)を表示
          example: "-"
        address_prefecture_id:
          type: integer
          nullable: true
          minimum: 1
          maximum: 47
          description: (国内)都道府県番号
          example:
        address_city_name:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)市区町村
          example:
        address_line_1:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)番地・建物名
          example:
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)その他
          example:
        country_name:
          type: string
          nullable: true
          maxLength: 255
          description: 国
          example:
        is_foreign_country:
          type: string
          maxLength: 1
          description: |
            外国住所フラグ<br>
            デフォルト：0（国内）、1（海外）
          example:
        foreign_address:
          type: string
          nullable: true
          maxLength: 500
          description: |
            海外の住所<br>
            外国居住者の場合のみ記載
          example:
        old_system_address_kana:
          type: string
          nullable: true
          maxLength: 500
          description: カナ住所（旧システムデータ）
          example:
        phone_number:
          type: string
          pattern: '^\+?\d{9,20}$'
          description: |
            電話番号<br>
            アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
          example: "09000100001"
        mail_delivery_flag:
          type: boolean
          description: |
            メール発信区分<br>
            デフォルト：false（不要）、true（要）
          example: false
        valid_user_flag:
          type: boolean
          nullable: true
          description: |
            有効ユーザーフラグ<br>
            true: 有効, false: 退会
          example: true
        created_at:
          type: string
          format: date-time
          description: 登録日時
          example: 2021/10/01 10:00:00
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: 2021/10/01 10:00:00
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: 削除日時
          example: 2021/10/01 10:00:00
        suspension_flag:
          type: boolean
          description: |
            停止フラグ<br>
            デフォルト：true（アクティブ）、false（停止）<br>
            ※停止の場合は、ポイント利用・付与ができない状態
          example: false
        notes:
          type: string
          nullable: true
          maxLength: 500
          description: |
            備考欄<br>
            フリーフォーマットでのメモが残せる。運用向けなので、エンドユーザーには見せない項目。
          example:
        replacement_membership_number:
          type: string
          nullable: true
          description: |
            付替先会員番号<br>
            付替された会員データの場合、付替先の会員番号が登録される
          example:
        replaced_at:
          format: date-time
          nullable: true
          description: |
            付替日時<br>
            付替された日時が登録される
          example: 2021/10/01 10:00:00
        entered_at:
          type: string
          format: date-time
          description: |
            入会日<br>
            会員の入会日が登録される
            （新プラスチックカード会員の場合、登録日時≠入会日の想定）
          example: 2021/10/01 10:00:00
        data_entered_at:
          type: string
          format: date-time
          description: |
            データ登録日<br>
            会員情報を登録した日時
          example: 2021/10/01 10:00:00
        rank_rewash_flag:
          type: boolean
          description: |
            ランク洗替対象外フラグ<br>
            true（洗替対象）、false（洗替対象外）<br>
            デフォルト：false<br>
            ※洗替対象外の場合はランクの更新が行われない
          example: false
        registered_staff:
          description: |
            登録スタッフ<br>
            店舗操作の場合、登録したスタッフのユーザーマスタIDが保存される
          $ref: "#/components/schemas/StaffNullable"
        last_update_staff:
          description: |
            最終更新スタッフ<br>
            店舗操作の場合、更新したスタッフのユーザーマスタIDが保存される
          $ref: "#/components/schemas/StaffNullable"
        deleted_facility:
          description: |
            削除登録店舗<br>
            店舗操作の場合、削除した店舗の店舗マスタIDが保存される
          $ref: "#/components/schemas/FacilityIncludeParentNullable"
        deleted_staff:
          description: |
            削除登録スタッフ<br>
            店舗操作の場合、削除したスタッフのユーザーマスタIDが保存される
          $ref: "#/components/schemas/StaffNullable"
        reissue_flag:
          type: boolean
          description: |
            再発行フラグ<br>
            デフォルト：false<br>
            ※再発行の場合は、初回入会ポイントがつかない等の判断で利用
          example: false
    UserId:
      type: integer
      minimum: 1
      description: 会員ID
      example: 1
    UserGender:
      type: integer
      default: 4
      enum:
        - 1
        - 2
        - 3
        - 4
      description: |
        性別<br>
        male: 1, female: 2, other: 3, unselected: 4
      example: 1
    PointHistory:
      type: object
      description: ポイント履歴
      required:
        - id
        - registered_at
        - points
        - amount
        - expired_at
        - is_reduced_tax
        - reason_kind
        - reason_text
        - nights_stayed
        - facility
        - registered_staff
        - notes
        - revision_note
        - last_updated_at
        - last_update_staff
        - campaign
        - is_editable
        - is_removable
      properties:
        id:
          type: integer
          minimum: 1
          description: ポイント履歴ID
          example: 1
        registered_at:
          type: string
          format: date-time
          description: 登録日時
          example: 2021/10/01 10:00:00
        points:
          type: integer
          description: ポイント増減数
          example: 100
        amount:
          type: integer
          nullable: true
          minimum: 1
          description: |
            売上金額（税込）
            獲得ポイント履歴の場合のみ
          example: 1
        expired_at:
          type: string
          nullable: true
          format: date-time
          description: ポイント有効期限
          example: 2021/10/01 10:00:00
        is_reduced_tax:
          type: boolean
          nullable: true
          description: |
            軽減税率対象
            獲得ポイント履歴の場合のみ
        reason_kind:
          type: integer
          minimum: 1
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 99
          description: |
            ポイント増減の理由（種別）<br>
            1: USED 2: EARNED, 3: EDIT, 4: EXPIRED, 5: DELETED, 6: JOINED, 7: REISSUE, 99: OTHER
          example: 1
        reason_text:
          type: string
          minLength: 0
          maxLength: 255
          description: ポイント増減の理由（テキスト）
          example: 売上ポイント
        nights_stayed:
          type: integer
          nullable: true
          minimum: 0
          description: 宿泊日数入力（フロントのみ）
          example: 1
        facility:
          $ref: "#/components/schemas/FacilityIncludeParentNullable"
        registered_staff:
          $ref: "#/components/schemas/StaffNullable"
        notes:
          type: string
          nullable: true
          minLength: 0
          maxLength: 100
          description: 特記事項
          example: xxx
        revision_note:
          type: string
          nullable: true
          description: 修正理由
          maxLength: 100
          example: yyy
        last_updated_at:
          type: string
          format: date-time
          description: 修正日時
          example: 2021/10/01 10:00:00
        last_update_staff:
          description: |
            最終更新スタッフ<br>
            店舗操作の場合、更新したスタッフのユーザーマスタIDが保存される
          $ref: "#/components/schemas/StaffNullable"
        campaign:
          type: object
          nullable: true
          required:
            - id
            - name
          properties:
            id:
              type: integer
              minimum: 1
              example: 1
              description: キャンペーンID
            name:
              type: string
              minLength: 1
              maxLength: 255
              example: ポイント2倍キャンペーン
              description: キャンペーン名
        is_editable:
          type: boolean
          description: 修正可能な履歴であるか
          example: true
        is_removable:
          type: boolean
          description: 削除可能な履歴であるか
          example: true
    FacilityIncludeChildren:
      type: object
      description: 施設情報（子施設一覧を含める）
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - staff
        - created_at
        - updated_at
        - facilities
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        staff:
          $ref: "#/components/schemas/FacilityStaff"
        created_at:
          $ref: "#/components/schemas/FacilityCreatedAt"
        updated_at:
          $ref: "#/components/schemas/FacilityUpdatedAt"
        facilities:
          type: array
          items:
            $ref: "#/components/schemas/Facility"
    FacilityIncludeParent:
      type: object
      description: 施設情報（親施設を含める）
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - staff
        - parent
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        staff:
          $ref: "#/components/schemas/FacilityStaff"
        created_at:
          $ref: "#/components/schemas/FacilityCreatedAt"
        updated_at:
          $ref: "#/components/schemas/FacilityUpdatedAt"
        parent:
          $ref: "#/components/schemas/Facility"
    FacilityIncludeParentNullable:
      type: object
      description: 施設情報（親施設を含める）
      nullable: true
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - staff
        - parent
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        staff:
          $ref: "#/components/schemas/FacilityStaff"
        created_at:
          $ref: "#/components/schemas/FacilityCreatedAt"
        updated_at:
          $ref: "#/components/schemas/FacilityUpdatedAt"
        parent:
          $ref: "#/components/schemas/Facility"
    Facility:
      type: object
      nullable: true
      description: parent_facilityの場合はnullable
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - staff
      properties:
        id:
          $ref: "#/components/schemas/FacilityId"
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        staff:
          $ref: "#/components/schemas/FacilityStaff"
        created_at:
          $ref: "#/components/schemas/FacilityCreatedAt"
        updated_at:
          $ref: "#/components/schemas/FacilityUpdatedAt"
    FacilityId:
      type: integer
      description: 施設・店舗ID
      example: 1
    FacilityName:
      type: string
      description: 施設・店舗名
      example: ホテル大阪
      minLength: 1
      maxLength: 30
    FacilityCode:
      type: string
      pattern: '^[\w-]{1,30}$'
      description: |
        施設コード<br>
        半角英数字, ハイフン, アンダースコアを許容
      example: 1234
    FacilityKind:
      type: integer
      nullable: true
      description: |
        種別（当面は受付フロントのみを利用する予定のため、2 or nullとなる想定）<br>
        2: 受付フロント
      example: 2
    FacilityAddress:
      type: object
      description: 住所情報
      required:
        - postal_code
        - prefecture
        - city_name
        - address_line_1
        - address_line_2
      properties:
        postal_code:
          type: string
          nullable: true
          pattern: '^\d{7}$'
          description: |
            郵便番号<br>
            -(ハイフン)なし
          example: "5430001"
        prefecture:
          nullable: true
          $ref: "#/components/schemas/Prefecture"
        city_name:
          type: string
          nullable: true
          maxLength: 255
          description: 市区町村
          example: 天王寺区
        address_line_1:
          type: string
          nullable: true
          maxLength: 255
          description: 番地・建物名
          example: 上本町６丁目１−５５
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
          description: その他
          example:
    FacilityPhoneNumber:
      type: string
      pattern: '^\+?\d{9,20}$'
      nullable: true
      description: |
        電話番号<br>
        アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
      example: "09012345678"
    FacilityFaxNumber:
      type: string
      pattern: '^\+?\d{9,20}$'
      nullable: true
      description: |
        FAX番号<br>
        アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
      example: "09012345678"
    FacilityEmail:
      type: string
      pattern: '^.+@.+\..+$'
      maxLength: 255
      nullable: true
      description: メールアドレス
      example: user@example.com
    FacilityStaff:
      type: object
      required:
        - name
      description: 担当者情報
      properties:
        name:
          type: string
          nullable: true
          description: 担当者名
          example: 佐藤太郎
    FacilityCreatedAt:
      type: string
      format: date-time
      description: 登録日時
      example: 2021/10/01 10:00:00
    FacilityUpdatedAt:
      type: string
      format: date-time
      description: 更新日時
      example: 2021/10/01 10:00:00
    Staff:
      type: object
      description: スタッフ情報
      required:
        - id
        - name
        - created_date
      properties:
        id:
          type: integer
          minimum: 1
          description: スタッフID
          example: 1
        name:
          $ref: "#/components/schemas/StaffName"
        created_date:
          type: string
          format: '^\d{4}\/\d{2}\/\d{2}$'
          description: 登録日
          example: 2021/10/01
    StaffNullable:
      type: object
      nullable: true
      description: スタッフ情報
      required:
        - id
        - name
        - created_date
      properties:
        id:
          type: integer
          minimum: 1
          description: スタッフID
          example: 1
        name:
          $ref: "#/components/schemas/StaffName"
        created_date:
          type: string
          format: '^\d{4}\/\d{2}\/\d{2}$'
          description: 登録日
          example: 2021/10/01
    StaffName:
      type: string
      description: 施設・店舗のスタッフ名
      example: 佐藤一郎
      minLength: 1
      maxLength: 255
    MembershipNumber:
      type: string
      minLength: 1
      maxLength: 255
      description: 会員番号
      example: 0123456789
    AdminAuthorityType:
      type: integer
      enum:
        - 1
        - 2
        - 3
      example: 1
      description: |
        操作権限<br>
        1: 参照 2: 編集 3: 管理者
    AdminAuthorityFunctionType:
      type: integer
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 101
      description: |
        機能種別<br>
        1: 会員管理<br>
        2: 施設・店舗管理<br>
        3: キャンペーン管理<br>
        4: 会員ランク管理<br>
        5: クーポン管理<br>
        101: 会員ポイント管理
      example: 1
    AdminUserPassword:
      type: string
      maxLength: 255
      description: パスワード
      example: p@ssword
    AdminUserPasswordConfirmation:
      type: string
      maxLength: 255
      description: パスワード（確認）
      example: p@ssword
    AdminUser:
      type: object
      description: 管理ユーザー情報
      required:
        - id
        - name
        - created_date
        - authority
      properties:
        id:
          $ref: "#/components/schemas/AdminUserId"
        name:
          $ref: "#/components/schemas/AdminUserName"
        created_date:
          type: string
          format: '^\d{4}\/\d{2}\/\d{2}$'
          description: 登録日
          example: 2021/10/01
        authority:
          type: object
          required:
            - type
            - functions
            - facilities
          properties:
            type:
              $ref: "#/components/schemas/AdminAuthorityType"
            functions:
              type: array
              items:
                type: object
                required:
                  - type
                  - name
                properties:
                  type:
                    $ref: "#/components/schemas/AdminAuthorityFunctionType"
                  name:
                    type: string
                    description: 操作対象の操作権限
                    example: 会員管理
            facilities:
              type: array
              items:
                type: object
                required:
                  - id
                  - name
                  - code
                properties:
                  id:
                    $ref: "#/components/schemas/FacilityId"
                  name:
                    $ref: "#/components/schemas/FacilityName"
                  code:
                    $ref: "#/components/schemas/FacilityCode"
    AdminUserName:
      type: string
      minLength: 1
      maxLength: 15
      description: 管理ユーザー名
      example: 鈴木一郎
    AdminUserId:
      type: string
      pattern: '^[\w-]{1,15}$'
      minLength: 1
      maxLength: 15
      description: |
        ユーザーID<br>
        半角英数字, ハイフン, アンダースコアを許容
      example: suzuki
    Coupon:
      type: object
      required:
        - id
        - parent_facilities
        - facilities
        - name
        - period
        - kind
        - point_grant_value
        - burden_rate
        - description
        - target_user_ranks
        - target_prefectures
        - is_target_foreign_country
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          description: クーポンID
          example: 1
        parent_facilities:
          type: array
          description: "対象の施設一覧"
          items:
            $ref: '#/components/schemas/FacilityIncludeChildren'
        name:
          type: string
          maxLength: 255
          description: クーポン名
          example: 新規登録クーポン
        period:
          type: object
          description: クーポン開催期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: "2021/10/01 10:00:00"
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: "2021/10/01 10:00:00"
        kind:
          type: integer
          enum:
            - 1
            - 2
          description: |
            クーポン種別<br>
            1: 一回のみ利用可能<br>
            2: 期間内何度でも利用可能
          example: 1
        point_grant_value:
          type: integer
          minimum: 1
          description: |
            付与ポイント数
          example: 100
        burden_rate:
          type: object
          nullable: true
          description: |
            負担率（%）<br>
            <font color="red">※付与ポイント(point_grant_value)が0の場合はnull</font><br>
          required:
            - hotel
            - head_office
          properties:
            hotel:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                ホテルの負担率(%)<br>
                本部の負担率との合計値が100でない場合はバリデーションエラー
              example: 50
            head_office:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                本部の負担率(%)<br>
                ホテルの負担率との合計値が100でない場合はバリデーションエラー
              example: 50
        description:
          type: string
          minLength: 1
          maxLength: 500100
          description: クーポン内容
          example: "新規登録に付与を行うクーポン"
        target_user_ranks:
          type: array
          items:
            $ref: '#/components/schemas/Rank'
        target_prefectures:
          type: array
          items:
            $ref: '#/components/schemas/Prefecture'
        is_target_foreign_country:
          type: boolean
          description: |
            外国住所を対象とするかフラグ<br>
            true: 対象とする false: 対象としない
          example: true
        created_at:
          type: string
          format: date-time
          description: 登録日時
          example: "2021/10/01 10:00:00"
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: "2021/10/01 10:00:00"
    Campaign:
      type: object
      required:
        - id
        - parent_facility
        - facilities
        - name
        - period
        - kind
        - burden_rate
        - updated_at
        - expired_at
        - description
      properties:
        id:
          type: integer
          description: キャンペーンID
          example: 1
        parent_facility:
          $ref: '#/components/schemas/Facility'
        facilities:
          type: array
          nullable: true
          description: |
            対象の店舗一覧<br>
            nullの場合は店舗を指定せず全店舗を対象とする
          items:
            $ref: '#/components/schemas/Facility'
        name:
          type: string
          maxLength: 255
          description: キャンペーン名
          example: 新規登録キャンペーン
        period:
          type: object
          description: キャンペーン開催期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: 2021/10/01 10:00:00
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: 2021/10/01 10:00:00
        kind:
          type: integer
          nullable: true
          enum:
            - 1
            - 2
            - 3
          description: |
            キャンペーン種別<br>
            1: 付与倍率<br>
            2: 固定付与（1回）<br>
            3: 固定付与（毎回）
          example: 1
        point_grant_rate:
          type: number
          minimum: 0.1
          description: |
            ポイント付与率<br>
            kindが1の場合は必須
          example: 3.5
        point_grant_value:
          type: integer
          minimum: 1
          description: |
            付与数<br>
            kindが2または3の場合は必須
          example: 100
        burden_rate:
          type: object
          description: 負担率（%）
          required:
            - hotel
            - head_office
          properties:
            hotel:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                ホテルの負担率(%)<br>
                本部の負担率との合計値が100でない場合はバリデーションエラー
              example: 50
            head_office:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                本部の負担率(%)<br>
                ホテルの負担率との合計値が100でない場合はバリデーションエラー
              example: 50
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: 2021/10/01 10:00:00
        expired_at:
          type: string
          format: date-time
          nullable: true
          description: ポイント有効期限
          example: 2021/10/01 10:00:00
        description:
          type: string
          minLength: 0
          maxLength: 500100
          description: キャンペーン詳細
          example: 新規登録に適用されるキャンペーン
    Pagination:
      type: object
      description: "pagination"
      required:
        - total_count
        - current_page
        - per_page
        - is_last_page
      properties:
        total_count:
          type: integer
          minimum: 0
          description: ""
          example: 150
        current_page:
          type: integer
          minimum: 1
          description: ""
          example: 1
        per_page:
          type: integer
          minimum: 1
          description: ""
          example: 50
        is_last_page:
          type: boolean
          description: ""
          example: true
    Rank:
      type: object
      required:
        - id
        - name
        - condition_data
        - is_auto_rank_down
        - is_default_rank
        - points_condition
      properties:
        id:
          type: integer
          description: ランクIDを
          example: 1
        name:
          type: string
          description: ランク名
          example: ゴールド
        condition_data:
          type: object
          required:
            - minimum_nights_stayed
            - minimum_usage_amount
          properties:
            minimum_nights_stayed:
              type: integer
              minimum: 0
              description: 累積宿泊数の下限
              example: 1
            minimum_usage_amount:
              type: integer
              minimum: 0
              description: 累積利用額の下限
              example: 1
        is_auto_rank_down:
          type: boolean
          description: 自動ランクダウン
          example: false
        is_default_rank:
          type: boolean
          description: 会員のデフォルトランク
          example: true
        points_condition:
          type: object
          description: ポイントの有効期限や条件に関する情報
          required:
            - point_grant_rate
            - with_expiry
            - points_days_valid
          properties:
            point_grant_rate:
              type: number
              description: ポイント付与率
              example: 1.5
            with_expiry:
              type: boolean
              description: 有効期限有無
              example: true
            points_days_valid:
              type: integer
              nullable: true
              description: ポイント有効日数
              example: 730
    UserRank:
      type: object
      required:
        - id
        - name
        - condition_data
        - is_auto_rank_down
        - is_default_rank
        - points_condition
        - calculation_term
      properties:
        id:
          type: integer
          description: ランクIDを
          example: 1
        name:
          type: string
          description: ランク名
          example: ゴールド
        condition_data:
          type: object
          required:
            - minimum_nights_stayed
            - minimum_usage_amount
          properties:
            minimum_nights_stayed:
              type: integer
              minimum: 0
              description: 累積宿泊数の下限
              example: 1
            minimum_usage_amount:
              type: integer
              minimum: 0
              description: 累積利用額の下限
              example: 1
        is_auto_rank_down:
          type: boolean
          description: 自動ランクダウン
          example: false
        is_default_rank:
          type: boolean
          description: 会員のデフォルトランク
          example: true
        points_condition:
          type: object
          description: ポイントの有効期限や条件に関する情報
          required:
            - point_grant_rate
            - with_expiry
            - points_days_valid
          properties:
            point_grant_rate:
              type: number
              description: ポイント付与率
              example: 1.5
            with_expiry:
              type: boolean
              description: 有効期限有無
              example: true
            points_days_valid:
              type: integer
              nullable: true
              description: ポイント有効日数
              example: 730
        calculation_term:
          type: object
          description: |
            会員ランク算定期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: "2021/04/01 10:00:00"
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: "2022/04/01 10:00:00"
    UserPoints:
      type: object
      required:
        - total_points
        - current_points
        - expiration_list
      properties:
        total_points:
          type: integer
          description: 通算獲得ポイント数
          example: 1000
        current_points:
          type: integer
          description: 現在保有しているポイント数
          example: 150
        expiration_list:
          type: array
          description: |
            有効期限が近い順にソートされた配列<br>
            expired_atがnullの場合は有効期限無し
          items:
            type: object
            required:
              - points
              - expired_at
            properties:
              points:
                type: integer
                description: ポイント数
                example: 100
              expired_at:
                type: string
                nullable: true
                format: date-time
                description: 有効期限日時
                example: 2021/10/01 10:00:00
    Prefecture:
      type: object
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 47
          description: id
          example: 1
        name:
          type: string
          description: 都道府県名
          example: 東京都
    AccessToken:
      type: string
      description: |
        Encoded JWT
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    RefreshToken:
      type: string
      description: |
        Encoded JWT
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJ0ZXN0IjoiaGVsbG8ifQ.-psa3s7sQWvbV2bUgH2G0s76jLLaLD8B2qOJB7fhl3k"
    BadRequestErrorCode:
      type: string
      example: "200X"
      enum:
        - "200X"
    UnauthorizedErrorCode:
      type: string
      example: "200X"
      enum:
        - "200X"
    ForbiddenErrorCode:
      type: string
      example: "200X"
      enum:
        - "200X"
    NotFoundErrorCode:
      type: string
      example: "200X"
      enum:
        - "200X"
    ServerErrorErrorCode:
      type: string
      example: "200X"
      enum:
        - "200X"
  parameters:
    perPage:
      name: per_page
      in: query
      schema:
        type: integer
        default: 30
      description: ページサイズ
      example: 30
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
      description: ページ番号
      example: 1
    tenant:
      name: "AUTHORIZATION-CLIENT"
      in: header
      description: "Tenant name"
      required: true
      schema:
        type: string
      example: rcourd
    jwt:
      name: "Authorization"
      in: header
      description: "JWT Token"
      required: true
      schema:
        type: string
      example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    userId:
      in: path
      name: user_id
      description: 会員ID
      example: 1
      required: true
      schema:
        type: integer
        minimum: 1
    adminUserId:
      in: path
      name: admin_user_id
      description: 管理ユーザーID
      example: tanaka
      required: true
      schema:
        type: string
        minLength: 1
  responses:
    400ResponseCode:
      description: "Bad Request Error"
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/BadRequestErrorCode'
              error_msg:
                type: string
                description: "Error Message"
                example: "Message"
    401ResponseCode:
      description: "Unauthorized Error"
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/UnauthorizedErrorCode'
              error_msg:
                type: string
                description: "Error Message"
                example: "Message"
    403ResponseCode:
      description: "Forbidden Error"
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/ForbiddenErrorCode'
              error_msg:
                type: string
                description: "Error Message"
                example: "Message"
    404ResponseCode:
      description: "Not Found Error"
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/NotFoundErrorCode'
              error_msg:
                type: string
                description: "Error Message"
                example: "Message"
    500ResponseCode:
      description: "Server Error"
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/ServerErrorErrorCode'
              error_msg:
                type: string
                description: "Error Message"
                example: "Message"