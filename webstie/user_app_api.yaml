openapi: 3.0.0
info:
  description: >-
    会員アプリに利用提供するAPI
  version: 1.0.0
  title: 会員アプリAPI
tags:
  - name: 認証
    description: 認証関連
  - name: 会員
    description: 会員の管理
  - name: ポイント
    description: ポイントの管理
  - name: キャンペーン
    description: キャンペーンの管理
  - name: クーポン
    description:  クーポンの管理
  - name: 施設・店舗
    description: 施設および店舗の管理
  - name: その他
    description: その他情報管理
paths:
  /user/api/v1/users/sign_in:
    post:
      summary: "[CP-API(USR)-1-01] ログイン"
      description: 会員番号、パスワードを受け付け、ログイン認証処理を行う
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - membership_number
                - password
              properties:
                membership_number:
                  type: string
                  minLength: 16
                  maxLength: 16
                  description: 会員番号
                  example: "1123000123456789"
                password:
                  type: string
                  minimum: 1
                  description: パスワード
                  example: "p@assword"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - user
                      - current_rank
                      - user_points
                      - present_term
                      - next_rank
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      present_term:
                        $ref: '#/components/schemas/PresentTerm'
                      next_rank:
                        $ref: '#/components/schemas/UserNextRank'

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/LoginError'
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/auth/token_refresh:
    post:
      summary: "[CP-API(USR)-1-08]トークンリフレッシュ"
      description: "リフレッシュトークンを受け付け、JWTトークンのリフレッシュ処理を行う"
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  $ref: "#/components/schemas/RefreshToken"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - user
                      - current_rank
                      - user_points
                      - present_term
                      - next_rank
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      present_term:
                        $ref: '#/components/schemas/PresentTerm'
                      next_rank:
                        $ref: '#/components/schemas/UserNextRank'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
                      - $ref: '#/components/schemas/InvalidRefreshToken'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/password/reset:
    put:
      summary: "[CP-API(USR)-1-02] パスワード再設定"
      description: パスワードリセットトークンとパスワードを受け付け、パスワード再設定処理を行う
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password_reset_token
                - new_password
                - new_password_confirmation
              properties:
                password_reset_token:
                  type: string
                  description: パスワード再設定用のトークン
                  example: "8743b52063cd84097a65d1633f5c74f5"
                new_password:
                  type: string
                  minLength: 6
                  maxLength: 72
                  description: パスワード
                  example: "p@ssword"
                new_password_confirmation:
                  type: string
                  description: |
                    パスワード（確認用）<br>
                    パラメータnew_passwordと一致していない場合はエラーとなる
                  example: "p@ssword"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - user
                      - current_rank
                      - user_points
                      - present_term
                      - next_rank
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      present_term:
                        $ref: '#/components/schemas/PresentTerm'
                      next_rank:
                        $ref: '#/components/schemas/UserNextRank'
        '400':
          description: エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/BadRequestErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidParameters'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/password/forgot:
    post:
      summary: "[CP-API(USR)-1-03] パスワード再設定用の認証コード送付"
      description: |
        会員番号を受け付け、会員番号に紐づくメールアドレス及び電話番号（SMS）に認証コードを送付する
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - membership_number
              properties:
                membership_number:
                  $ref: "#/components/schemas/MembershipNumber"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/password/verify:
    get:
      summary: "[CP-API(USR)-1-04] パスワード再設定用の認証コード確認"
      description: 会員番号、認証コードを受け付け、パスワードリセットトークンを返却する
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
        - in: query
          name: membership_number
          description: 会員番号
          required: true
          schema:
            type: string
          example: "1123000123456789"
        - in: query
          name: code
          description: 認証コード
          required: true
          schema:
            type: string
          example: "123456"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - password_reset_token
                    properties:
                      password_reset_token:
                        type: string
                        description: パスワード再設定用のトークン
                        example: "8743b52063cd84097a65d1633f5c74f5"
        '400':
          description: エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/BadRequestErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidParameters'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/transfer/request:
    post:
      summary: "[CP-API(USR)-1-05] 会員移行用の認証コード送付（旧会員番号向け）"
      description: |
        旧会員番号を受け付け、会員番号に紐づくメールアドレス及び電話番号（SMS）に認証コードを送付する<br>
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - membership_number
              properties:
                membership_number:
                  $ref: "#/components/schemas/OldMembershipNumber"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/transfer/verify:
    post:
      summary: "[CP-API(USR)-1-06] 会員移行（自動ログイン）"
      description: |
        会員番号、認証コードを受け付け、会員移行を行う<br>
        新会員番号でのログイン認証を自動で行う<br>
        <br>
        ※新会員番号が自動発番され、以前のランクが引き継がれる
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - membership_number
                - code
              properties:
                membership_number:
                  $ref: "#/components/schemas/OldMembershipNumber"
                code:
                  type: string
                  description: 認証コード
                  example: "123456"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: "result"
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: "current timestamp"
                  payload:
                    type: object
                    required:
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                      - user
                      - current_rank
                      - user_points
                      - present_term
                      - next_rank
                    properties:
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: "2021/10/01 10:00:00"
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      present_term:
                        $ref: '#/components/schemas/PresentTerm'
                      next_rank:
                        $ref: '#/components/schemas/UserNextRank'
        '400':
          description: エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/BadRequestErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidCodeSpecified'

        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/tripla/settings:
    get:
      summary: "[CP-API(USR)-1-07] 宿泊予約サイト（トリプラ）向け認証キー取得"
      description: 会員番号を受け付け、宿泊予約サイト（トリプラ）向け認証キーを返却する
      tags:
        - 認証
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    $ref: '#/components/schemas/TriplaAccessKey'

        '400':
          description: エラー
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/BadRequestErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidParameters'
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users:
    post:
      summary: "[CP-API(USR)-2-01] 会員登録"
      description: |
        会員登録用トークンを受け付け、登録項目に従い、会員の新規登録処理を行う
        ※性別は未回答として登録を行う
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - last_name
                - first_name
                - last_name_kana
                - first_name_kana
                - phone_number
                - birthday
                - gender
                - is_foreign_country
                - country_name
                - mail_delivery_flag
                - password
                - password_confirmation
                - email
                - postal_code
                - address_prefecture_id
                - address_city_name
                - address_line_1
                - address_line_2
              properties:
                token:
                  type: string
                  description: 会員登録用認証コード
                  example: "qwertyuiop"
                last_name:
                  type: string
                  maxLength: 255
                  description: 姓
                  example: "佐藤"
                first_name:
                  type: string
                  maxLength: 255
                  description: 名
                  example: "一郎"
                last_name_kana:
                  type: string
                  maxLength: 255
                  description: 姓（カナ）
                  example: "サトウ"
                first_name_kana:
                  type: string
                  maxLength: 255
                  description: 名（カナ）
                  example: "イチロウ"
                phone_number:
                  type: string
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                birthday:
                  type: string
                  pattern: '^\d{8}$'
                  description: |
                    誕生日<br>
                    YYYYMMDD形式
                  example: "19800401"
                gender:
                  $ref: '#/components/schemas/UserGender'
                is_foreign_country:
                  type: integer
                  maxLength: 1
                  description: |
                    外国住所フラグ<br>
                    デフォルト：0（国内）、1（海外）
                  example: 0
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    (国内)郵便番号<br>
                    -(ハイフン)なし<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: |
                    (国内)都道府県番号<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: 1
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)市区町村<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "天王寺区"
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)番地・建物名
                  example: "上本町６丁目１−５５"
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)その他
                  example: ""
                country_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 国
                foreign_address:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    海外の住所<br>
                    外国居住者の場合のみ記載
                  example: ""
                mail_delivery_flag:
                  type: boolean
                  description: |
                    メール発信区分<br>
                    デフォルト：false（不要）、true（要）
                  example: true
                password:
                  type: string
                  minimum: 1
                  description: パスワード
                  example: "p@assword"
                password_confirmation:
                  type: string
                  description: |
                    パスワード（確認用）<br>
                    パラメータpasswordと一致していない場合はエラーとなる
                  example: "p@ssword"
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: "user@example.com"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"

  /user/api/v1/users/{membership_number}/:
    put:
      summary: "[CP-API(USR)-2-02] 会員更新"
      description: 更新項目に従い、会員の更新処理を行う
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - last_name
                - first_name
                - last_name_kana
                - first_name_kana
                - phone_number
                - birthday
                - gender
                - is_foreign_country
                - country_name
                - mail_delivery_flag
              properties:
                last_name:
                  type: string
                  maxLength: 255
                  description: 姓
                  example: "佐藤"
                first_name:
                  type: string
                  maxLength: 255
                  description: 名
                  example: "一郎"
                last_name_kana:
                  type: string
                  maxLength: 255
                  description: 姓（カナ）
                  example: "サトウ"
                first_name_kana:
                  type: string
                  maxLength: 255
                  description: 名（カナ）
                  example: "イチロウ"
                phone_number:
                  type: string
                  pattern: '^\+?\d{9,20}$'
                  description: |
                    電話番号<br>
                    アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
                  example: "09012345678"
                birthday:
                  type: string
                  pattern: '^\d{8}$'
                  description: |
                    誕生日<br>
                    YYYYMMDD形式
                  example: "19800401"
                gender:
                  $ref: '#/components/schemas/UserGender'
                is_foreign_country:
                  type: integer
                  maxLength: 1
                  description: |
                    外国住所フラグ<br>
                    デフォルト：0（国内）、1（海外）
                  example: 0
                postal_code:
                  type: string
                  nullable: true
                  pattern: '^\d{7}$'
                  description: |
                    (国内)郵便番号<br>
                    -(ハイフン)なし<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "5430001"
                address_prefecture_id:
                  type: integer
                  nullable: true
                  minimum: 1
                  maximum: 47
                  description: |
                    (国内)都道府県番号<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: 1
                address_city_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)市区町村<br>
                    <font color="red">※is_foreign_country=0(国内)の場合のみ必須</font>
                  example: "天王寺区"
                address_line_1:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)番地・建物名
                  example: "上本町６丁目１−５５"
                address_line_2:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: |
                    (国内)その他
                  example: ""
                country_name:
                  type: string
                  nullable: true
                  maxLength: 255
                  description: 国
                  example: ""
                foreign_address:
                  type: string
                  nullable: true
                  maxLength: 500
                  description: |
                    海外の住所<br>
                    外国居住者の場合のみ記載
                  example: ""
                mail_delivery_flag:
                  type: boolean
                  description: |
                    メール発信区分<br>
                    デフォルト：false（不要）、true（要）
                  example: true
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    get:
      summary: "[CP-API(USR)-2-04] 会員詳細取得"
      description: 会員情報の詳細情報を返却する
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: 会員の詳細情報
                    required:
                      - user
                      - current_rank
                      - user_points
                      - present_term
                      - next_rank
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      current_rank:
                        $ref: '#/components/schemas/UserRank'
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      present_term:
                        $ref: '#/components/schemas/PresentTerm'
                      next_rank:
                        $ref: '#/components/schemas/UserNextRank'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: "[CP-API(USR)-2-05] 会員削除（退会）"
      description: 会員の削除（退会）処理を行う
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/email:
    put:
      summary: "[CP-API(USR)-2-03] メール更新"
      description: 変更後のメールアドレスと認証コードを受け付け、メールアドレスの更新処理を行う
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - email
              properties:
                code:
                  $ref: "#/components/schemas/AuthenticationCode"
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: "user@example.com"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/password:
    put:
      summary: "[CP-API(USR)-2-06] パスワード変更"
      description: |
        会員番号、現在のパスワード、変更後のパスワードを受け付け、変更後のパスワードへの更新処理を行う
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
                - new_password_confirmation
              properties:
                current_password:
                  type: string
                  description: 現在のパスワード
                  example: p@ssword
                new_password:
                  type: string
                  minLength: 6
                  maxLength: 72
                  description: 変更後のパスワード
                  example: newp@ssword
                new_password_confirmation:
                  type: string
                  description: |
                    変更後のパスワード（確認用）<br>
                    パラメータnew_passwordと一致していない場合はエラーとなる
                  example: newp@ssword
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - user
                      - access_token
                      - access_token_expired_at
                      - refresh_token
                      - refresh_token_expired_at
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      access_token:
                        $ref: '#/components/schemas/AccessToken'
                      access_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: 2021/10/01 10:00:00
                      refresh_token:
                        $ref: '#/components/schemas/RefreshToken'
                      refresh_token_expired_at:
                        type: string
                        format: date-time
                        description: 有効期限
                        example: '2021/10/01 10:00:00'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/email/request:
    post:
      summary: "[CP-API(USR)-2-08] メールアドレス確認用のコード送信"
      description: 新しいメールアドレスを受け付け、変更用の認証コードを送付する
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - email_confirmation
              properties:
                email:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: "user@example.com"
                email_confirmation:
                  type: string
                  pattern: '^.+@.+\..+$'
                  maxLength: 255
                  description: メールアドレス
                  example: "user@example.com"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/register/request:
    post:
      summary: "[CP-API(USR)-2-09] 会員登録用の認証コード送信"
      description: |
        メールアドレスを受け付け、会員登録用の認証コードを送付する
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - email_confirmation
              properties:
                email:
                  $ref: '#/components/schemas/UserEmail'
                email_confirmation:
                  type: string
                  description: emailと同値のみ指定可能
                  example: "user@example.com"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/register/verify:
    get:
      summary: "[CP-API(USR)-2-10] 会員登録用の認証コード確認"
      description: |
        メールアドレス、認証コードを受け付け、会員登録用トークンを返却する
      tags:
        - 会員
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
        - in: query
          name: email
          description: メールアドレス
          required: true
          schema:
            type: string
          example: "user@example.com"
        - in: query
          name: code
          description: 認証コード
          required: true
          schema:
            type: string
          example: "123456"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - token
                    properties:
                      token:
                        type: string
                        description: 会員登録用トークン
                        example: "8743b52063cd84097a65d1633f5c74f5"
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/points/use:
    post:
      summary: "[CP-API(USR)-3-01] ポイント利用"
      description: |
        利用ポイント数を受け付け、ポイント減算処理を行う<br>
        ポイント利用時は有効期限が近い保有ポイントから減算をする
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - points
              properties:
                dry-run:
                  type: boolean
                  description: |
                    ポイント利用のdry-run<br>
                    trueの場合は実際のポイント利用を行わずに、確定後の情報が返却される。
                points:
                  type: integer
                  minimum: 1
                  description: 利用ポイント数
                  example: 100
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - user_points
                      - used_points
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      used_points:
                        type: integer
                        description: 利用ポイント数
                        example: 100

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/points/grant:
    post:
      summary: "[CP-API(USR)-3-02] ポイント付与"
      description: 付与ポイント数を受け付け、ポイント付与処理を行う
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - points
              properties:
                dry-run:
                  type: boolean
                  description: |
                    ポイント付与のdry-run<br>
                    trueの場合は実際のポイント付与を行わずに、確定後の情報が返却される。
                points:
                  type: integer
                  minimum: 1
                  description: 付与する通常ポイント数
                  example: 100
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - is_dry-run
                      - user_points
                      - added_points
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      added_points:
                        type: integer
                        description: 付与ポイント数
                        example: 100

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/points:
    get:
      summary: "[CP-API(USR)-3-04] ポイント数取得"
      description: |
        保有ポイント数、累積ポイント数を返却する
        また、有効期限毎にポイント数とその有効期限もわかるようにする
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: 会員のポイント情報
                    required:
                      - user_points
                    properties:
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/points/histories:
    get:
      summary: "[CP-API(USR)-3-05] ポイント履歴一覧取得"
      description: 参照対象年を受け付け、ポイント履歴一覧情報を返却する
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
        - in: query
          name: year
          schema:
            type: integer
            example: 2020
          required: true
          description: 指定年度
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - year
                      - histories
                      - pagination
                    properties:
                      year:
                        type: integer
                        description: 指定年度
                        example: 2020
                      histories:
                        type: array
                        items:
                          $ref: '#/components/schemas/PointHistory'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/points/grant/calculate:
    post:
      summary: "[CP-API(USR)-3-03] ポイント付与（金額ベース）"
      description: 売上金額を受け付け、ポイント付与処理を行う
      tags:
        - ポイント
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - dry-run
                - amount
                - is_reduced_tax
                - notes
                - apply_date
                - facility_id
              properties:
                dry-run:
                  type: boolean
                  description: |
                    ポイント付与のdry-run<br>
                    trueの場合は実際のポイント付与を行わずに、確定後の情報が返却される。
                amount:
                  type: integer
                  minimum: 1
                  description: 売上金額（税込）
                  example: 1
                is_reduced_tax:
                  type: boolean
                  description: |
                    軽減税率対象<br>
                    amountに含まれる消費税額が軽減税率対象であるか
                nights_stayed:
                  type: integer
                  nullable: true
                  minimum: 0
                  description: 宿泊日数入力（フロントのみ）
                  example: 1
                notes:
                  type: string
                  minLength: 0
                  maxLength: 100
                  description: |
                    特記事項<br>
                    特別な対応等をした場合に特記事項が入力される
                  example: ""
                apply_date:
                  type: string
                  format: '^\d{4}\/\d{2}\/\d{2}$'
                  description: 取引の追加対象となる日付
                  example: "2021/10/01"
                facility_id:
                  type: integer
                  minimum: 1
                  description: 施設・店舗ID
                  example: 1
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    description: |
                      キャンペーンが適用される場合、通常ポイント付与分とキャンペーンによるポイント付与分は分離した形でレスポンスされる。<br>
                      ※通常付与率1% / キャンペーン付与率5%の場合は、付与されるポイント総数は5%分（1%+5%で6%ではない）となり、
                       1%分は通常付与扱い、4%分にキャンペーン付与扱いとなる。<br><br>
                       ただし、キャンペーンポイントが固定値で登録されている場合のポイント総数は、通常ポイント付与率により算出したものと、とキャンペーンポイントの合算値となる
                    required:
                      - is_dry-run
                      - user_points
                      - added_points
                    properties:
                      is_dry-run:
                        type: boolean
                        description: dry-runによるリクエストを受け付けた場合はtrue
                      user_points:
                        $ref: '#/components/schemas/UserPoints'
                      added_points:
                        type: object
                        required:
                          - amount
                          - point_grant_rate
                          - added_points
                          - is_reduced_tax
                          - notes
                          - includes_campaign_points
                        properties:
                          amount:
                            type: integer
                            minimum: 1
                            description: 売上金額（税込）
                            example: 1000
                          point_grant_rate:
                            type: number
                            description: 現在のランクによる通常ポイント付与率
                            example: 1.5
                          added_points:
                            type: integer
                            minimum: 1
                            description: |
                              付与ポイント数<br>
                              ※キャンペーン適用時は通常ポイント付与率適用分のみとなる
                            example: 300
                          is_reduced_tax:
                            type: boolean
                            description: 軽減税率対象
                          notes:
                            type: string
                            minLength: 0
                            maxLength: 100
                            description: 特記事項
                            example: ""
                          includes_campaign_points:
                            type: object
                            description: 適用されたキャンペーン情報
                            required:
                              - campaign
                            properties:
                              campaign:
                                type: object
                                nullable: true
                                required:
                                  - id
                                  - name
                                  - point_grant_rate
                                  - expired_at
                                  - period
                                  - added_points
                                properties:
                                  id:
                                    type: integer
                                    minimum: 1
                                    example: 1
                                    description: キャンペーンID
                                  name:
                                    type: string
                                    minLength: 1
                                    maxLength: 255
                                    example: "ポイント2倍キャンペーン"
                                    description: キャンペーン名
                                  point_grant_rate:
                                    type: number
                                    description: |
                                      キャンペーンのポイント付与率<br>
                                      キャンペーン適用時はこちらの付与率のみが適用される。
                                    example: 3.5
                                  expired_at:
                                    type: string
                                    format: date-time
                                    description: |
                                      ポイント有効期限<br>
                                      キャンペーンのポイント付与率から通常のポイント付与率分を差し引いたポイントにのみ適用される。
                                    example: "2021/10/01 10:00:00"
                                  period:
                                    type: object
                                    description: キャンペーン開催期間
                                    required:
                                      - start_at
                                      - end_at
                                    properties:
                                      start_at:
                                        type: string
                                        format: date-time
                                        description: 開始日
                                        example: "2021/10/01 10:00:00"
                                      end_at:
                                        type: string
                                        format: date-time
                                        description: 終了日
                                        example: "2021/10/01 10:00:00"
                                  added_points:
                                    type: integer
                                    minimum: 1
                                    description: |
                                      キャンペーンによる付与ポイント数<br>
                                      ※通常ポイント付与率による適用分は含まない
                                    example: 300

        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/campaigns:
    get:
      summary: "[CP-API(USR)-4-01] キャンペーン一覧取得"
      description: キャンペーンの一覧を返却する
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/lang'
        - in: query
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: |
            施設・店舗ID<br>
            施設IDを指定した場合は施設に紐づく店舗のキャンペーン情報も返却される
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - campaigns
                      - pagination
                    properties:
                      campaigns:
                        type: array
                        description: |
                          facilitiesがnullの場合は全店舗を対象としたキャンペーン
                        items:
                          $ref: '#/components/schemas/Campaign'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/campaigns/{campaign_id}:
    get:
      summary: "[CP-API(USR)-4-02] キャンペーン詳細取得"
      description: キャンペーンの詳細情報を返却する
      tags:
        - キャンペーン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/lang'
        - in: path
          name: campaign_id
          description: キャンペーンID
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - campaign
                    properties:
                      campaign:
                        $ref: '#/components/schemas/Campaign'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - error_code
                  - error_msg
                properties:
                  success:
                    type: boolean
                    example: false
                  timestamp:
                    type: integer
                    description: "unixtime"
                    example: 1621912345
                  error_code:
                    $ref: '#/components/schemas/UnauthorizedErrorCode'
                  error_msg:
                    anyOf:
                      - $ref: '#/components/schemas/InvalidTenantSpecified'
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/coupons:
    get:
      summary: "[CP-API(USR)-5-01] クーポン一覧取得"
      description: クーポンの一覧を返却する
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - coupons
                    properties:
                      coupons:
                        type: array
                        items:
                          $ref: '#/components/schemas/Coupon'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/coupons/{coupon_code}:
    get:
      summary: "[CP-API(USR)-5-02] クーポン情報取得"
      description: クーポンIDを受け付け、クーポン情報を返却する
      tags:
        - クーポン
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
        - in: path
          name: coupon_code
          schema:
            type: string
            example: "cpn001"
          required: true
          description: クーポンコード
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - coupon
                    properties:
                      coupon:
                        $ref: '#/components/schemas/Coupon'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/prefectures:
    get:
      summary: "[CP-API(USR)-6-01] 都道府県マスタ一覧取得"
      description: 都道府県の一覧を返却する
      tags:
        - その他
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - prefectures
                    properties:
                      prefectures:
                        type: array
                        items:
                          $ref: '#/components/schemas/Prefecture'
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"

  /user/api/v1/facilities:
    get:
      summary: "[CP-API(USR)-7-01] 施設・店舗一覧取得"
      description: 施設および店舗の一覧を返却する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - in: query
          name: parent_facility_code
          schema:
            type: string
            nullable: true
          required: true
          example: front
          description: |
            親施設コード<br>
            ※null指定の場合は親施設を持たない店舗の一覧を取得
        - in: query
          name: area_id
          schema:
            type: integer
          required: false
          example: 1
          description: エリアID
        - in: query
          name: only_favorite
          schema:
            type: boolean
          required: false
          example: false
          description: |
            お気に入り指定した施設・店舗のみを取得する場合に指定<br>
            falseを指定した場合はお気に入り状態でのフィルタリングを行わない。
        - in: query
          name: kind
          schema:
            type: integer
          required: false
          example: 1
          description: "店舗種別の指定"
        - in: query
          name: find_all
          schema:
            type: boolean
          required: false
          example: false
          description: |
            施設・店舗を全件取得するオプション<br>
            ページネーション向けのパラメータと併用された場合はfind_allパラメータを優先とする。
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/perPage'
        - $ref: '#/components/parameters/lang'

      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - area
                      - parent_facility
                      - facilities
                    properties:
                      area:
                        type: object
                        description: エリア情報（エリア指定無しの場合はnull）
                        nullable: true
                        required:
                          - id
                          - name
                        properties:
                          id:
                            type: integer
                            description: エリアID
                            example: 1
                          name:
                            type: string
                            description: エリア名
                            example: "関東"
                      parent_facility:
                        $ref: '#/components/schemas/ParentFacility'
                      facilities:
                        type: array
                        items:
                          $ref: '#/components/schemas/Facility'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/facilities/{facility_id}/favorites:
    post:
      summary: "[CP-API(USR)-7-02] お気に入り施設登録"
      description: 施設IDを受け付け、お気に入りを登録する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: |
            施設ID<br>
            ※店舗は指定不可
        - $ref: '#/components/parameters/lang'
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
    delete:
      summary: "[CP-API(USR)-7-03] お気に入り施設削除"
      description: 施設IDを受け付け、お気に入りを削除する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - in: path
          name: facility_id
          schema:
            type: integer
            example: 1
          required: true
          description: |
            施設ID<br>
            ※店舗は指定不可
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '404':
          $ref: "#/components/responses/404ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/areas:
    get:
      summary: "[CP-API(USR)-7-04] エリア一覧取得"
      description: エリアの一覧を返却する
      tags:
        - 施設・店舗
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - areas
                    properties:
                      areas:
                        type: array
                        items:
                          $ref: '#/components/schemas/Area'
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/users/{membership_number}/fcm-token:
    post:
      summary: "[CP-API(USR)-8-01] FCMトークン登録"
      description: PUSH通知を受信するためのFCMトークンをFirebaseに登録する
      tags:
        - 通知
      parameters:
        - $ref: '#/components/parameters/tenant'
        - $ref: '#/components/parameters/jwt'
        - $ref: '#/components/parameters/membershipNumber'
        - $ref: '#/components/parameters/lang'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - fcm_token
              properties:
                fcm_token:
                  type: string
                  minLength: 1
                  description: FCMトークン
                  example: "CI2k_HHwgIpoDKCIZvvDMExUdFQ3P1"
      responses:
        '201':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
        '400':
          $ref: "#/components/responses/400ResponseCode"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
  /user/api/v1/postalcode:
    get:
      summary: "[CP-API(USR)-6-02] 住所自動取得"
      description: 郵便番号を受け付け、住所を返却する
      tags:
        - その他
      parameters:
        - $ref: '#/components/parameters/tenant'
        - in: query
          name: postalcode
          description: 日本国内の郵便番号（ハイフンなし）
          required: true
          schema:
            type: string
            pattern: '^\d{7}$'
          example: "1000001"
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - timestamp
                  - payload
                properties:
                  success:
                    type: boolean
                    example: true
                    description: result
                  timestamp:
                    type: integer
                    example: 1618803973
                    description: current timestamp
                  payload:
                    type: object
                    required:
                      - address
                    properties:
                      address:
                        type: object
                        description: 自動取得できなかった場合はnull
                        nullable: true
                        required:
                          - postal_code
                          - prefecture_id
                          - prefecture_name
                          - city_name
                          - line_1
                          - line_2
                        properties:
                          postal_code:
                            type: string
                            nullable: true
                            pattern: '^\d{7}$'
                            description: |
                              郵便番号<br>
                              -(ハイフン)なし
                            example: "1000001"
                          prefecture_id:
                            type: integer
                            minimum: 1
                            maximum: 47
                            description: 都道府県番号
                            example: 12
                          prefecture_name:
                            type: string
                            description: 都道府県名
                            example: "北海道"
                          city_name:
                            type: string
                            maxLength: 255
                            description: 市区町村
                            example: "千代田区"
                          line_1:
                            type: string
                            maxLength: 255
                            description: 番地・建物名
                            example: "千代田1"
                          line_2:
                            type: string
                            maxLength: 255
                            description: その他
                            example: "千代田ビル12階"
        '401':
          $ref: "#/components/responses/401ResponseCode"
        '500':
          $ref: "#/components/responses/500ResponseCode"
components:
  schemas:
    Pagination:
      type: object
      description: "pagination"
      required:
        - total_count
        - current_page
        - per_page
        - is_last_page
      properties:
        total_count:
          type: integer
          minimum: 0
          description: ""
          example: 150
        current_page:
          type: integer
          minimum: 1
          description: ""
          example: 1
        per_page:
          type: integer
          minimum: 1
          description: ""
          example: 50
        is_last_page:
          type: boolean
          description: ""
          example: true
    AccessToken:
      type: string
      description: |
        Encoded JWT
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    RefreshToken:
      type: string
      description: |
        Encoded JWT
      example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJ0ZXN0IjoiaGVsbG8ifQ.-psa3s7sQWvbV2bUgH2G0s76jLLaLD8B2qOJB7fhl3k"
    AuthenticationCode:
      type: string
      description: 認証コード
      example: "123456"
    Prefecture:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 47
          description: id
          example: 1
        name:
          type: string
          description: 都道府県名
          example: "東京都"
    UserRank:
      type: object
      required:
        - id
        - name
        - condition
        - is_auto_rank_down
        - is_default_rank
        - points_condition
        - calculation_term
      properties:
        id:
          type: integer
          description: ランクIDを
          example: 1
        name:
          type: string
          description: ランク名
          example: "ゴールド"
        condition:
          type: object
          required:
            - minimum_nights_stayed
            - minimum_usage_amount
          properties:
            minimum_nights_stayed:
              type: integer
              minimum: 0
              description: 累積宿泊数の下限
              example: 1
            minimum_usage_amount:
              type: integer
              minimum: 0
              description: 累積利用額の下限
              example: 1
        is_auto_rank_down:
          type: boolean
          description: 自動ランクダウン
          example: false
        is_default_rank:
          type: boolean
          description: 会員のデフォルトランク
          example: true
        points_condition:
          type: object
          required:
            - point_grant_rate
            - with_expiry
            - points_days_valid
          properties:
            point_grant_rate:
              type: number
              description: ポイント付与率
              example: 1.5
            with_expiry:
              type: boolean
              description: 有効期限有無
              example: true
            points_days_valid:
              type: integer
              nullable: true
              description: ポイント有効日数
              example: 730
        calculation_term:
          type: object
          description: |
            会員のランク算定期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: "2021/04/01 10:00:00"
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: "2022/04/01 10:00:00"
    Rank:
      type: object
      required:
        - id
        - name
        - condition
        - is_auto_rank_down
        - is_default_rank
        - points_condition
      properties:
        id:
          type: integer
          description: ランクIDを
          example: 1
        name:
          type: string
          description: ランク名
          example: "ゴールド"
        condition:
          type: object
          required:
            - minimum_nights_stayed
            - minimum_usage_amount
          properties:
            minimum_nights_stayed:
              type: integer
              minimum: 0
              description: 累積宿泊数の下限
              example: 1
            minimum_usage_amount:
              type: integer
              minimum: 0
              description: 累積利用額の下限
              example: 1
        is_auto_rank_down:
          type: boolean
          description: 自動ランクダウン
          example: false
        is_default_rank:
          type: boolean
          description: 会員のデフォルトランク
          example: true
        points_condition:
          type: object
          required:
            - point_grant_rate
            - with_expiry
            - points_days_valid
          properties:
            point_grant_rate:
              type: number
              description: ポイント付与率
              example: 1.5
            with_expiry:
              type: boolean
              description: 有効期限有無
              example: true
            points_days_valid:
              type: integer
              nullable: true
              description: ポイント有効日数
              example: 730
    Coupon:
      type: object
      description: クーポン情報
      required:
        - id
        - name
        - code
        - facilities
        - validity_period
        - description
        - is_usable
        - usage_limit
        - remain_usable_count
        - used_count
      properties:
        id:
          type: integer
          description: クーポンID
          minimum: 1
          example: 1
        name:
          type: string
          description: クーポン名
          minLength: 1
          maxLength: 255
          example: "割引クーポン"
        code:
          type: string
          minLength: 1
          maxLength: 255
          description: クーポンコード
          example: "cpn001"
        facilities:
          type: array
          nullable: true
          description: 利用可能店舗一覧
          items:
            $ref: "#/components/schemas/FacilityIncludeParent"
        validity_period:
          type: object
          description: 有効期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: "2021/10/01 10:00:00"
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: "2021/10/01 10:00:00"
        description:
          type: string
          minLength: 1
          maxLength: 255
          description: 内容
          example: "ポイント付与(2000PT)"
        is_usable:
          type: boolean
          description: |
            利用可能フラグ<br>
            true: 使用可能, false: 使用不可能
          example: true
        usage_limit:
          type: integer
          minimum: 1
          description: ご利用回数上限（使用済み回数分も含む）
          example: 3
        remain_usable_count:
          type: integer
          minimum: 1
          description: 残り利用可能回数
          example: 1
        used_count:
          type: integer
          minimum: 1
          description: 利用済み回数
          example: 2
    Campaign:
      type: object
      required:
        - id
        - parent_facility
        - facilities
        - name
        - period
        - kind
        - burden_rate
        - updated_at
        - expired_at
        - description
      properties:
        id:
          type: integer
          description: キャンペーンID
          example: 1
        parent_facility:
          $ref: '#/components/schemas/ParentFacility'
        facilities:
          type: array
          nullable: true
          description: |
            対象の店舗一覧<br>
            nullの場合は店舗を指定せず全店舗を対象とする
          items:
            $ref: '#/components/schemas/Facility'
        name:
          type: string
          maxLength: 255
          description: キャンペーン名
          example: "新規登録キャンペーン"
        period:
          type: object
          description: キャンペーン開催期間
          required:
            - start_at
            - end_at
          properties:
            start_at:
              type: string
              format: date-time
              description: 開始日
              example: "2021/10/01 10:00:00"
            end_at:
              type: string
              format: date-time
              description: 終了日
              example: "2021/10/01 10:00:00"
        kind:
          type: integer
          nullable: true
          enum:
            - 1
            - 2
            - 3
          description: |
            キャンペーン種別<br>
            1: 付与倍率<br>
            2: 固定付与（1回）<br>
            3: 固定付与（毎回）
          example: 1
        point_grant_rate:
          type: number
          minimum: 0.1
          description: |
            ポイント付与率<br>
            kindが1の場合は必須
          example: 3.5
        point_grant_value:
          type: integer
          minimum: 1
          description: |
            付与数<br>
            kindが2または3の場合は必須
          example: 100
        burden_rate:
          type: object
          description: 負担率（%）
          required:
            - hotel
            - head_office
          properties:
            hotel:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                ホテルの負担率(%)<br>
                本部の負担率との合計値が100でない場合はバリデーションエラー
              example: 50
            head_office:
              type: integer
              minimum: 0
              maximum: 100
              description: |
                本部の負担率(%)<br>
                ホテルの負担率との合計値が100でない場合はバリデーションエラー
              example: 50
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: "2021/10/01 10:00:00"
        expired_at:
          type: string
          format: date-time
          nullable: true
          description: ポイント有効期限
          example: "2021/10/01 10:00:00"
        description:
          type: string
          minLength: 0
          maxLength: 500100
          description: キャンペーン詳細
          example: "新規登録に適用されるキャンペーン"
    UserPoints:
      type: object
      required:
        - total_points
        - current_points
        - expiration_list
      properties:
        total_points:
          type: integer
          description: 通算獲得ポイント数
          example: 1000
        current_points:
          type: integer
          description: 現在保有しているポイント数
          example: 150
        expiration_list:
          type: array
          description: |
            有効期限が近い順にソートされた配列<br>
            expired_atがnullの場合は有効期限無し
          items:
            type: object
            required:
              - point_type
              - points
              - expired_at
            properties:
              point_type:
                $ref: '#/components/schemas/PointType'
              points:
                type: integer
                description: ポイント数
                example: 100
              expired_at:
                type: string
                nullable: true
                format: date-time
                description: 有効期限日時
                example: "2021/10/01 10:00:00"
    PointType:
      type: integer
      nullable: false
      enum:
        - 1
        - 2
      description: |
        ポイントタイプ<br>
        1: 通常ポイント<br>
        2: キャンペーンポイント
      example: 1
    PointTypeForHistory:
      type: integer
      nullable: true
      enum:
        - 1
        - 2
      description: |
        ポイントタイプ<br>
        1: 通常ポイント<br>
        2: キャンペーンポイント<br>
        ※ポイント利用履歴では混合となるためnull
      example: 1
    PointHistory:
      type: object
      description: ポイント履歴
      required:
        - id
        - point_type
        - registered_at
        - points
        - amount
        - expired_at
        - is_reduced_tax
        - reason_kind
        - reason_text
        - nights_stayed
        - facility
        - notes
        - revision_note
        - last_updated_at
        - campaign
      properties:
        id:
          type: integer
          minimum: 1
          description: ポイント履歴ID
          example: 1
        point_type:
          $ref: "#/components/schemas/PointTypeForHistory"
        registered_at:
          type: string
          format: date-time
          description: 登録日時
          example: "2021/10/01 10:00:00"
        points:
          type: integer
          description: ポイント増減数
          example: 100
        amount:
          type: integer
          nullable: true
          minimum: 1
          description: |
            売上金額（税込）
            獲得ポイント履歴の場合のみ
          example: 1
        expired_at:
          type: string
          nullable: true
          format: date-time
          description: ポイント有効期限
          example: "2021/10/01 10:00:00"
        is_reduced_tax:
          type: boolean
          nullable: true
          description: |
            軽減税率対象
            獲得ポイント履歴の場合のみ
        reason_kind:
          type: integer
          minimum: 1
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 99
          description: |
            ポイント増減の理由（種別）<br>
            1: USED 2: EARNED, 3: EDIT, 4: EXPIRED, 5: DELETED, 6: JOINED, 7: REISSUE, 99: OTHER
          example: 1
        reason_text:
          type: string
          minLength: 0
          maxLength: 255
          description: ポイント増減の理由（テキスト）
          example: "売上ポイント"
        nights_stayed:
          type: integer
          nullable: true
          minimum: 0
          description: 宿泊日数入力（フロントのみ）
          example: 1
        facility:
          $ref: "#/components/schemas/FacilityIncludeParent"
        notes:
          type: string
          nullable: true
          minLength: 0
          maxLength: 100
          description: 特記事項
          example: ""
        revision_note:
          type: string
          nullable: true
          description: 修正理由
          maxLength: 100
          example: ""
        last_updated_at:
          type: string
          format: date-time
          description: 修正日時
          example: "2021/10/01 10:00:00"
        campaign:
          type: object
          nullable: true
          required:
            - id
            - name
          properties:
            id:
              type: integer
              minimum: 1
              example: 1
              description: キャンペーンID
            name:
              type: string
              minLength: 1
              maxLength: 255
              example: ポイント2倍キャンペーン
              description: "キャンペーン名"
    PresentTerm:
      type: object
      required:
        - total_used_amount
        - total_nights_stayed
      properties:
        total_used_amount:
          type: integer
          minimum: 0
          description: 今期累計利用額
          example: 100000
        total_nights_stayed:
          type: integer
          minimum: 0
          description: 今期累計宿泊数
          example: 10
    TriplaAccessKey:
      type: object
      description: 外部連携向けの情報
      required:
        - tripla
      properties:
        tripla:
          type: object
          description: トリプラ向け
          required:
            - access_key
          properties:
            access_key:
              type: string
              description: アクセスキー
              example: "qwertyuiop"
    User:
      type: object
      description: 会員情報
      required:
        - membership_number
        - last_name
        - first_name
        - last_name_kana
        - first_name_kana
        - gender
        - birthday
        - postal_code
        - email
        - is_foreign_country
        - phone_number
        - mail_delivery_flag
        - created_at
        - updated_at
        - entered_at
      properties:
        membership_number:
          $ref: "#/components/schemas/MembershipNumber"
        last_name:
          type: string
          maxLength: 255
          description: 姓
          example: "千代田"
        first_name:
          type: string
          maxLength: 255
          description: 名
          example: "太郎"
        last_name_kana:
          type: string
          maxLength: 255
          description: 姓（カナ）
          example: "チヨダ"
        first_name_kana:
          type: string
          maxLength: 255
          description: 名（カナ）
          example: "タロウ"
        gender:
          $ref: '#/components/schemas/UserGender'
        birthday:
          type: string
          pattern: '^\d{8}$'
          description: |
            誕生日<br>
            YYYYMMDD形式
          example: "19800401"
        email:
          $ref: '#/components/schemas/UserEmail'
        postal_code:
          type: string
          nullable: true
          pattern: '^\d{7}$'
          description: |
            (国内)郵便番号<br>
            -(ハイフン)なし
          example: "1000001"
        address_prefecture_id:
          type: integer
          nullable: true
          minimum: 1
          maximum: 47
          description: (国内)都道府県番号
          example: 12
        address_city_name:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)市区町村
          example: "千代田区"
        address_line_1:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)番地・建物名
          example: "千代田1"
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
          description: (国内)その他
          example: "千代田ビル12階"
        country_name:
          type: string
          nullable: true
          maxLength: 255
          description: 国
          example: "日本"
        is_foreign_country:
          type: integer
          maxLength: 1
          description: |
            外国住所フラグ<br>
            デフォルト：0（国内）、1（海外）
          example: 0
        foreign_address:
          type: string
          nullable: true
          maxLength: 500
          description: |
            海外の住所<br>
            外国居住者の場合のみ記載
          example: ""
        phone_number:
          type: string
          pattern: '^\+?\d{9,20}$'
          description: |
            電話番号<br>
            アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
          example: "09000123456"
        mail_delivery_flag:
          type: boolean
          description: |
            メール発信区分<br>
            デフォルト：false（不要）、true（要）
          example: true
        created_at:
          type: string
          format: date-time
          description: 登録日時
          example: "2021/10/01 10:00:00"
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: "2021/10/01 10:00:00"
        entered_at:
          type: string
          pattern: '^\d{4}\/\d{2}\/\d{2}$'
          description: |
            入会日<br>
            会員の入会日が登録される
            （新プラスチックカード会員の場合、登録日時≠入会日の想定）
          example: "2021/10/01"
    UserEmail:
      type: string
      pattern: '^.+@.+\..+$'
      maxLength: 255
      description: メールアドレス
      example: "user@example.com"
    UserGender:
      type: integer
      default: 4
      enum:
        - 1
        - 2
        - 3
        - 4
      description: |
        性別<br>
        男性: 1, 女性: 2, その他: 3, 未選択: 4
      example: 1
    UserNextRank:
      type: object
      nullable: true
      description: |
        次のランクアップ条件<br>
        上位ランクが無い場合はnull
      required:
        - rank_data
        - required_nights_stayed
        - required_usage_amount
      properties:
        rank_data:
          $ref: '#/components/schemas/UserRank'
        required_nights_stayed:
          type: integer
          minimum: 0
          description: ランクアップに必要な残り宿泊数
          example: 1
        required_usage_amount:
          type: integer
          minimum: 0
          description: ランクアップに必要な残り利用金額
    Area:
      type: object
      description: エリア情報
      required:
        - id
        - name
      properties:
        id:
          type: integer
          description: エリアID
          example: 1
        name:
          type: string
          description: エリア名
          example: "関東"
    ParentFacility:
      type: object
      nullable: true
      description: 施設
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - is_favorite
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        is_favorite:
          $ref: "#/components/schemas/FacilityFavoriteFlag"
    Facility:
      type: object
      description: 店舗
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - is_favorite
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        is_favorite:
          $ref: "#/components/schemas/FacilityFavoriteFlag"
    FacilityIncludeParent:
      type: object
      description: 施設情報（親施設を含める）
      required:
        - id
        - name
        - code
        - kind
        - address
        - phone_number
        - fax_number
        - email
        - is_favorite
        - parent
      properties:
        id:
          type: integer
          minimum: 1
          description: 施設ID
          example: 1
        name:
          $ref: "#/components/schemas/FacilityName"
        code:
          $ref: "#/components/schemas/FacilityCode"
        kind:
          $ref: "#/components/schemas/FacilityKind"
        address:
          $ref: "#/components/schemas/FacilityAddress"
        phone_number:
          $ref: "#/components/schemas/FacilityPhoneNumber"
        fax_number:
          $ref: "#/components/schemas/FacilityFaxNumber"
        email:
          $ref: "#/components/schemas/FacilityEmail"
        parent:
          $ref: "#/components/schemas/ParentFacility"
    FacilityFavoriteFlag:
      type: boolean
      description: お気に入りフラグ
      example: false
    FacilityName:
      type: string
      description: 施設・店舗名
      example: "ホテル大阪"
      minLength: 1
      maxLength: 255
    FacilityCode:
      type: string
      description: 施設コード
      example: "1234"
      minLength: 1
      maxLength: 255
    FacilityKind:
      type: integer
      description: |
        種別<br>
        1: ホテル<br>
        2: 受付フロント
      example: 1
    FacilityAddress:
      type: object
      description: 住所情報
      required:
        - area
        - postal_code
        - prefecture
        - city_name
        - address_line_1
        - address_line_2
      properties:
        area:
          $ref: "#/components/schemas/Area"
        postal_code:
          type: string
          nullable: true
          pattern: '^\d{7}$'
          description: |
            郵便番号<br>
            -(ハイフン)なし
          example: "5430001"
        prefecture:
          nullable: true
          $ref: "#/components/schemas/Prefecture"
        city_name:
          type: string
          nullable: true
          maxLength: 255
          description: 市区町村
          example: "天王寺区"
        address_line_1:
          type: string
          nullable: true
          maxLength: 255
          description: 番地・建物名
          example: "上本町６丁目１−５５"
        address_line_2:
          type: string
          nullable: true
          maxLength: 255
          description: その他
          example: ""
    FacilityPhoneNumber:
      type: string
      pattern: '^\+?\d{9,20}$'
      nullable: true
      description: |
        電話番号<br>
        アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
      example: "09012345678"
    FacilityFaxNumber:
      type: string
      pattern: '^\+?\d{9,20}$'
      nullable: true
      description: |
        FAX番号<br>
        アプリ上 9桁〜20桁で制御、先頭1桁に+を許容
      example: "09012345678"
    FacilityEmail:
      type: string
      pattern: '^.+@.+\..+$'
      maxLength: 255
      nullable: true
      description: メールアドレス
      example: "user@example.com"
    MembershipNumber:
      type: string
      minLength: 16
      maxLength: 16
      description: 会員番号
      example: "1123000123456789"
    OldMembershipNumber:
      type: string
      minLength: 16
      maxLength: 16
      description: 旧会員番号
      example: "1101000123456789"
    BadRequestErrorCode:
      type: string
      description: 別途エラーコード表にて定義
      example: "200X"
      enum:
        - "200X"
    UnauthorizedErrorCode:
      type: string
      description: 別途エラーコード表にて定義
      example: "200X"
      enum:
        - "200X"
    ForbiddenErrorCode:
      type: string
      description: 別途エラーコード表にて定義
      example: "200X"
      enum:
        - "200X"
    NotFoundErrorCode:
      type: string
      description: 別途エラーコード表にて定義
      example: "200X"
      enum:
        - "200X"
    ServerErrorErrorCode:
      type: string
      description: 別途エラーコード表にて定義
      example: "200X"
      enum:
        - "200X"
    InvalidTenantSpecified:
      type: string
      description: テナントエラー
      example: "有効なテナントではありません"
    LoginError:
      type: string
      description: "ログイン失敗"
      example: "ログインに失敗しました"
    InvalidAccessToken:
      type: string
      description: アクセストークンエラー
      example: "有効なアクセストークンではありません"
    InvalidRefreshToken:
      type: string
      description: リフレッシュトークンエラー
      example: "有効なリフレッシュトークンではありません"
    InvalidEmailVerifycationCodeSpecified:
      type: string
      description: |
        無効なメール認証コードが指定された場合<br>
      example: "有効な認証コードではありません"
    InvalidPasswordResetAuthCodeSpecified:
      type: string
      description: |
        無効なパスワード再設定用の認証コードが指定された場合<br>
      example: "有効な認証コードではありません"
    InvalidParameters:
      type: string
      description: バリデーション要件を満たしていないパラメータを受け付けた場合
      example: "XXXは必須です"
    InvalidCodeSpecified:
      type: string
      description: 認証コードが不正
      example: "正しい認証コードではありません"
    InvalidMembershipNumberSpecified:
      type: string
      description: "無効な会員番号"
      example: "正しい会員番号ではありません"
  parameters:
    perPage:
      name: per_page
      in: query
      schema:
        type: integer
        default: 50
      description: ページサイズ
      example: 50
    page:
      name: page
      in: query
      schema:
        type: integer
        default: 1
      description: ページ番号
      example: 1
    tenant:
      name: "AUTHORIZATION-CLIENT"
      in: header
      description: "Tenant name"
      required: true
      schema:
        type: string
      example: "rcloud"
    jwt:
      name: "Authorization"
      in: header
      description: "JWT Token"
      required: true
      schema:
        type: string
      example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
    userId:
      in: path
      name: user_id
      description: 会員ID
      example: 1
      required: true
      schema:
        type: string
        minimum: 1
    membershipNumber:
      in: path
      name: membership_number
      description: 会員番号
      required: true
      schema:
        type: string
      example: "1123000123456789"
    lang:
      in: query
      name: lang
      description: 言語設定
      required: false
      schema:
        type: string
        default: "ja"
        enum:
          - "ja"
          - "en"
      example: ja
  responses:
    400ResponseCode:
      description: Bad Request Error
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/BadRequestErrorCode'
              error_msg:
                anyOf:
                  - $ref: '#/components/schemas/InvalidParameters'
    401ResponseCode:
      description: Unauthorized Error
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/UnauthorizedErrorCode'
              error_msg:
                anyOf:
                  - $ref: '#/components/schemas/InvalidTenantSpecified'
                  - $ref: '#/components/schemas/InvalidAccessToken'
    403ResponseCode:
      description: Forbidden Error
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/ForbiddenErrorCode'
              error_msg:
                type: string
                description: Error Message
                example: "Message"
    404ResponseCode:
      description: Not Found Error
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/NotFoundErrorCode'
              error_msg:
                type: string
                description: 指定のリソースが存在しない場合
                example: "XXXが見つかりません"
    500ResponseCode:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            required:
              - success
              - timestamp
              - error_code
              - error_msg
            properties:
              success:
                type: boolean
                example: false
              timestamp:
                type: integer
                description: "unixtime"
                example: 1621912345
              error_code:
                $ref: '#/components/schemas/ServerErrorErrorCode'
              error_msg:
                type: string
                description: |
                  APIサーバー側で問題が発生している場合
                example: "エラーが発生しました"
